
using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Text;

namespace Microsoft.VisualStudio.Input
{
    public static class SolutionFileGenerator
    {
        public static void WriteSolutionFiles(
            string repositoryDirectory,
            string srcDirectory,
            string ruleSetsDirectory,
            string strongNameKeysDirectory,
            string docsDirectory)
        {
            var array = new[]
            {
            new FileLocation(Path.Combine(repositoryDirectory, "build.cmd"), GeneratebuildCmdContent()),
            new FileLocation(Path.Combine(repositoryDirectory, "clean.cmd"), GeneratecleanCmdContent()),
            new FileLocation(Path.Combine(repositoryDirectory, ".editorconfig"), GenerateeditorconfigEditorconfigContent()),
            new FileLocation(Path.Combine(repositoryDirectory, ".gitignore"), GenerategitignoreGitignoreContent()),
            new FileLocation(Path.Combine(repositoryDirectory, "License.txt"), GenerateLicenseTxtContent()),
            new FileLocation(Path.Combine(repositoryDirectory, "readme.md"), GeneratereadmeMDContent()),
            new FileLocation(Path.Combine(repositoryDirectory, "rebuild.cmd"), GeneraterebuildCmdContent()),
            new FileLocation(Path.Combine(repositoryDirectory, "restore.cmd"), GeneraterestoreCmdContent()),
            new FileLocation(Path.Combine(repositoryDirectory, "shell.cmd"), GenerateshellCmdContent()),
            new FileLocation(Path.Combine(repositoryDirectory, ".tfignore"), GeneratetfignoreTfignoreContent()),
            new FileLocation(Path.Combine(ruleSetsDirectory, "SolutionRules.ruleset"), GenerateSolutionRulesRulesetContent()),
            new FileLocation(Path.Combine(docsDirectory, "ContributorCovenant.md"), GenerateContributorCovenantMDContent()),
            new FileLocation(Path.Combine(srcDirectory, "Directory.Build.props"), GenerateDirectoryBuildPropsContent()),
            new FileLocation(Path.Combine(srcDirectory, "Directory.Build.targets"), GenerateDirectoryBuildTargetsContent())
            };

            foreach (FileLocation location in array)
            {
                File.WriteAllText(location.Path, location.Content);
            }

            WebClient wc = new WebClient();
            string url = "http://ollon.scienceontheweb.net/35MSSharedLib1024.snk";
            wc.DownloadFile(url, Path.Combine(strongNameKeysDirectory, "35MSSharedLib1024.snk"));
        }


        private static string GeneratebuildCmdContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"@echo off");
            sb.AppendLine(@"pushd ""%~dp0""");
            sb.AppendLine(@"cls");
            sb.AppendLine(@"for /f ""tokens=*"" %%i IN ('""%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"" -property installationPath') DO (");
            sb.AppendLine(@"set VSINSTALLPATH=%%i");
            sb.AppendLine(@"set TOOLSPATH=%%i\Common7\Tools");
            sb.AppendLine(@"set DEVENVDIR=%%i\Common7\IDE\");
            sb.AppendLine(@"set DEVCMD=%%i\Common7\Tools\VsDevCmd.bat");
            sb.AppendLine(@")");
            sb.AppendLine(@"for /f ""tokens=*"" %%j IN ('dir src\*.sln /b') DO (");
            sb.AppendLine(@"set SOLUTIONFILE=%~dp0src\%%j");
            sb.AppendLine(@")");
            sb.AppendLine(@"call ""%DEVCMD%""");
            sb.AppendLine(@"popd");
            sb.AppendLine(@"msbuild ""%SOLUTIONFILE%"" /t:Build /m /v:m ");
            sb.AppendLine(@"echo Complete!");
            sb.AppendLine(@"pause");
            sb.AppendLine(@"exit /b");
            return sb.ToString();
        }

        private static string GeneratecleanCmdContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"@echo off");
            sb.AppendLine(@"pushd ""%~dp0""");
            sb.AppendLine(@"cls");
            sb.AppendLine(@"for /f ""tokens=*"" %%i IN ('""%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"" -property installationPath') DO (");
            sb.AppendLine(@"set VSINSTALLPATH=%%i");
            sb.AppendLine(@"set TOOLSPATH=%%i\Common7\Tools");
            sb.AppendLine(@"set DEVENVDIR=%%i\Common7\IDE\");
            sb.AppendLine(@"set DEVCMD=%%i\Common7\Tools\VsDevCmd.bat");
            sb.AppendLine(@")");
            sb.AppendLine(@"for /f ""tokens=*"" %%j IN ('dir src\*.sln /b') DO (");
            sb.AppendLine(@"set SOLUTIONFILE=%~dp0src\%%j");
            sb.AppendLine(@")");
            sb.AppendLine(@"call ""%DEVCMD%""");
            sb.AppendLine(@"popd");
            sb.AppendLine(@"msbuild ""%SOLUTIONFILE%"" /t:Clean /m /v:m ");
            sb.AppendLine(@"echo Complete!");
            sb.AppendLine(@"pause");
            sb.AppendLine(@"exit /b");
            return sb.ToString();
        }

        private static string GenerateeditorconfigEditorconfigContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"# EditorConfig is awesome:http://EditorConfig.org");
            sb.AppendLine(@"# top-most EditorConfig file");
            sb.AppendLine(@"root = true");
            sb.AppendLine(@"# Don't use tabs for indentation.");
            sb.AppendLine(@"[*]");
            sb.AppendLine(@"indent_style = space");
            sb.AppendLine(@"# (Please don't specify an indent_size here; that has too many unintended consequences.)");
            sb.AppendLine(@"# Code files");
            sb.AppendLine(@"[*.{cs,csx,vb,vbx}]");
            sb.AppendLine(@"indent_size = 4");
            sb.AppendLine(@"insert_final_newline = true");
            sb.AppendLine(@"charset = utf-8-bom");
            sb.AppendLine(@"# Xml project files");
            sb.AppendLine(@"[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]");
            sb.AppendLine(@"indent_size = 2");
            sb.AppendLine(@"# Xml config files");
            sb.AppendLine(@"[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]");
            sb.AppendLine(@"indent_size = 2");
            sb.AppendLine(@"# JSON files");
            sb.AppendLine(@"[*.json]");
            sb.AppendLine(@"indent_size = 2");
            sb.AppendLine(@"# Dotnet code style settings:");
            sb.AppendLine(@"[*.{cs,vb}]");
            sb.AppendLine(@"# Sort using and Import directives with System.* appearing first");
            sb.AppendLine(@"dotnet_sort_system_directives_first = true");
            sb.AppendLine(@"# Avoid ""this."" and ""Me."" if not necessary");
            sb.AppendLine(@"dotnet_style_qualification_for_field = false:suggestion");
            sb.AppendLine(@"dotnet_style_qualification_for_property = false:suggestion");
            sb.AppendLine(@"dotnet_style_qualification_for_method = false:suggestion");
            sb.AppendLine(@"dotnet_style_qualification_for_event = false:suggestion");
            sb.AppendLine(@"# Use language keywords instead of framework type names for type references");
            sb.AppendLine(@"dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion");
            sb.AppendLine(@"dotnet_style_predefined_type_for_member_access = true:suggestion");
            sb.AppendLine(@"# Suggest more modern language features when available");
            sb.AppendLine(@"dotnet_style_object_initializer = false:suggestion");
            sb.AppendLine(@"dotnet_style_collection_initializer = false:suggestion");
            sb.AppendLine(@"dotnet_style_coalesce_expression = true:suggestion");
            sb.AppendLine(@"dotnet_style_null_propagation = true:suggestion");
            sb.AppendLine(@"dotnet_style_explicit_tuple_names = false:suggestion");
            sb.AppendLine(@"# CSharp code style settings:");
            sb.AppendLine(@"[*.cs]");
            sb.AppendLine(@"# Prefer ""var"" everywhere");
            sb.AppendLine(@"csharp_style_var_for_built_in_types = false:suggestion");
            sb.AppendLine(@"csharp_style_var_when_type_is_apparent = false:suggestion");
            sb.AppendLine(@"csharp_style_var_elsewhere = false:suggestion");
            sb.AppendLine(@"# Prefer method-like constructs to have a block body");
            sb.AppendLine(@"csharp_style_expression_bodied_methods = false:none");
            sb.AppendLine(@"csharp_style_expression_bodied_constructors = false:none");
            sb.AppendLine(@"csharp_style_expression_bodied_operators = false:none");
            sb.AppendLine(@"# Prefer property-like constructs to have an expression-body");
            sb.AppendLine(@"csharp_style_expression_bodied_properties = false:none");
            sb.AppendLine(@"csharp_style_expression_bodied_indexers = false:none");
            sb.AppendLine(@"csharp_style_expression_bodied_accessors = false:none");
            sb.AppendLine(@"# Suggest more modern language features when available");
            sb.AppendLine(@"csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion");
            sb.AppendLine(@"csharp_style_pattern_matching_over_as_with_null_check = true:suggestion");
            sb.AppendLine(@"csharp_style_inlined_variable_declaration = true:suggestion");
            sb.AppendLine(@"csharp_style_throw_expression = true:suggestion");
            sb.AppendLine(@"csharp_style_conditional_delegate_call = true:suggestion");
            sb.AppendLine(@"# Newline settings");
            sb.AppendLine(@"csharp_new_line_before_open_brace = all");
            sb.AppendLine(@"csharp_new_line_before_else = true");
            sb.AppendLine(@"csharp_new_line_before_catch = true");
            sb.AppendLine(@"csharp_new_line_before_finally = true");
            sb.AppendLine(@"csharp_new_line_before_members_in_object_initializers = true");
            sb.AppendLine(@"csharp_new_line_before_members_in_anonymous_types = true");
            return sb.ToString();
        }

        private static string GenerategitignoreGitignoreContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"## Ignore Visual Studio temporary files, build results, and");
            sb.AppendLine(@"## files generated by popular Visual Studio add-ons.");
            sb.AppendLine(@"# User-specific files");
            sb.AppendLine(@"*.suo");
            sb.AppendLine(@"*.user");
            sb.AppendLine(@"*.userosscache");
            sb.AppendLine(@"*.sln.docstates");
            sb.AppendLine(@"# User-specific files (MonoDevelop/Xamarin Studio)");
            sb.AppendLine(@"*.userprefs");
            sb.AppendLine(@"# Build results");
            sb.AppendLine(@"[Dd]ebug/");
            sb.AppendLine(@"[Dd]ebugPublic/");
            sb.AppendLine(@"[Rr]elease/");
            sb.AppendLine(@"[Rr]eleases/");
            sb.AppendLine(@"x64/");
            sb.AppendLine(@"x86/");
            sb.AppendLine(@"bld/");
            sb.AppendLine(@"[Bb]in/");
            sb.AppendLine(@"[Oo]bj/");
            sb.AppendLine(@"[Ll]og/");
            sb.AppendLine(@"[Bb]inaries/");
            sb.AppendLine(@"![Bb]uild");
            sb.AppendLine(@"*.lock.json");
            sb.AppendLine(@"NuGet.exe");
            sb.AppendLine(@"# Visual Studio 2015 cache/options directory");
            sb.AppendLine(@".vs/");
            sb.AppendLine(@"# Uncomment if you have tasks that create the project's static files in wwwroot");
            sb.AppendLine(@"#wwwroot/");
            sb.AppendLine(@"# MSTest test Results");
            sb.AppendLine(@"[Tt]est[Rr]esult*/");
            sb.AppendLine(@"[Bb]uild[Ll]og.*");
            sb.AppendLine(@"# NUNIT");
            sb.AppendLine(@"*.VisualState.xml");
            sb.AppendLine(@"TestResult.xml");
            sb.AppendLine(@"# Build Results of an ATL Project");
            sb.AppendLine(@"[Dd]ebugPS/");
            sb.AppendLine(@"[Rr]eleasePS/");
            sb.AppendLine(@"dlldata.c");
            sb.AppendLine(@"# DNX");
            sb.AppendLine(@"project.lock.json");
            sb.AppendLine(@"artifacts/");
            sb.AppendLine(@"*_i.c");
            sb.AppendLine(@"*_p.c");
            sb.AppendLine(@"*_i.h");
            sb.AppendLine(@"*.ilk");
            sb.AppendLine(@"*.meta");
            sb.AppendLine(@"*.obj");
            sb.AppendLine(@"*.pch");
            sb.AppendLine(@"*.pdb");
            sb.AppendLine(@"*.pgc");
            sb.AppendLine(@"*.pgd");
            sb.AppendLine(@"*.rsp");
            sb.AppendLine(@"*.sbr");
            sb.AppendLine(@"*.tlb");
            sb.AppendLine(@"*.tli");
            sb.AppendLine(@"*.tlh");
            sb.AppendLine(@"*.tmp");
            sb.AppendLine(@"*.tmp_proj");
            sb.AppendLine(@"*.log");
            sb.AppendLine(@"*.vspscc");
            sb.AppendLine(@"*.vssscc");
            sb.AppendLine(@".builds");
            sb.AppendLine(@"*.pidb");
            sb.AppendLine(@"*.svclog");
            sb.AppendLine(@"*.scc");
            sb.AppendLine(@"# Chutzpah Test files");
            sb.AppendLine(@"_Chutzpah*");
            sb.AppendLine(@"# Visual C++ cache files");
            sb.AppendLine(@"ipch/");
            sb.AppendLine(@"*.aps");
            sb.AppendLine(@"*.ncb");
            sb.AppendLine(@"*.opendb");
            sb.AppendLine(@"*.opensdf");
            sb.AppendLine(@"*.sdf");
            sb.AppendLine(@"*.cachefile");
            sb.AppendLine(@"*.VC.db");
            sb.AppendLine(@"*.VC.VC.opendb");
            sb.AppendLine(@"# Visual Studio profiler");
            sb.AppendLine(@"*.psess");
            sb.AppendLine(@"*.vsp");
            sb.AppendLine(@"*.vspx");
            sb.AppendLine(@"*.sap");
            sb.AppendLine(@"# TFS 2012 Local Workspace");
            sb.AppendLine(@"$tf/");
            sb.AppendLine(@"# Guidance Automation Toolkit");
            sb.AppendLine(@"*.gpState");
            sb.AppendLine(@"# ReSharper is a .NET coding add-in");
            sb.AppendLine(@"_ReSharper*/");
            sb.AppendLine(@"*.[Rr]e[Ss]harper");
            sb.AppendLine(@"*.DotSettings.user");
            sb.AppendLine(@"# JustCode is a .NET coding add-in");
            sb.AppendLine(@".JustCode");
            sb.AppendLine(@"# TeamCity is a build add-in");
            sb.AppendLine(@"_TeamCity*");
            sb.AppendLine(@"# DotCover is a Code Coverage Tool");
            sb.AppendLine(@"*.dotCover");
            sb.AppendLine(@"# NCrunch");
            sb.AppendLine(@"_NCrunch_*");
            sb.AppendLine(@".*crunch*.local.xml");
            sb.AppendLine(@"nCrunchTemp_*");
            sb.AppendLine(@"# MightyMoose");
            sb.AppendLine(@"*.mm.*");
            sb.AppendLine(@"AutoTest.Net/");
            sb.AppendLine(@"# Web workbench (sass)");
            sb.AppendLine(@".sass-cache/");
            sb.AppendLine(@"# Installshield output folder");
            sb.AppendLine(@"[Ee]xpress/");
            sb.AppendLine(@"# DocProject is a documentation generator add-in");
            sb.AppendLine(@"DocProject/buildhelp/");
            sb.AppendLine(@"DocProject/Help/*.HxT");
            sb.AppendLine(@"DocProject/Help/*.HxC");
            sb.AppendLine(@"DocProject/Help/*.hhc");
            sb.AppendLine(@"DocProject/Help/*.hhk");
            sb.AppendLine(@"DocProject/Help/*.hhp");
            sb.AppendLine(@"DocProject/Help/Html2");
            sb.AppendLine(@"DocProject/Help/html");
            sb.AppendLine(@"# Click-Once directory");
            sb.AppendLine(@"publish/");
            sb.AppendLine(@"# Publish Web Output");
            sb.AppendLine(@"*.[Pp]ublish.xml");
            sb.AppendLine(@"*.azurePubxml");
            sb.AppendLine(@"# TODO: Comment the next line if you want to checkin your web deploy settings");
            sb.AppendLine(@"# but database connection strings (with potential passwords) will be unencrypted");
            sb.AppendLine(@"*.pubxml");
            sb.AppendLine(@"*.publishproj");
            sb.AppendLine(@"# Microsoft Azure Web App publish settings. Comment the next line if you want to");
            sb.AppendLine(@"# checkin your Azure Web App publish settings, but sensitive information contained");
            sb.AppendLine(@"# in these scripts will be unencrypted");
            sb.AppendLine(@"PublishScripts/");
            sb.AppendLine(@"# NuGet Packages");
            sb.AppendLine(@"#*.nupkg");
            sb.AppendLine(@"# The packages folder can be ignored because of Package Restore");
            sb.AppendLine(@"**/packages/*");
            sb.AppendLine(@"# except build/, which is used as an MSBuild target.");
            sb.AppendLine(@"!**/packages/build/");
            sb.AppendLine(@"# Uncomment if necessary however generally it will be regenerated when needed");
            sb.AppendLine(@"#!**/packages/repositories.config");
            sb.AppendLine(@"# NuGet v3's project.json files produces more ignoreable files");
            sb.AppendLine(@"*.nuget.props");
            sb.AppendLine(@"*.nuget.targets");
            sb.AppendLine(@"# Microsoft Azure Build Output");
            sb.AppendLine(@"csx/");
            sb.AppendLine(@"*.build.csdef");
            sb.AppendLine(@"# Microsoft Azure Emulator");
            sb.AppendLine(@"ecf/");
            sb.AppendLine(@"rcf/");
            sb.AppendLine(@"# Windows Store app package directories and files");
            sb.AppendLine(@"AppPackages/");
            sb.AppendLine(@"BundleArtifacts/");
            sb.AppendLine(@"Package.StoreAssociation.xml");
            sb.AppendLine(@"_pkginfo.txt");
            sb.AppendLine(@"# Visual Studio cache files");
            sb.AppendLine(@"# files ending in .cache can be ignored");
            sb.AppendLine(@"*.[Cc]ache");
            sb.AppendLine(@"# but keep track of directories ending in .cache");
            sb.AppendLine(@"!*.[Cc]ache/");
            sb.AppendLine(@"# Others");
            sb.AppendLine(@"ClientBin/");
            sb.AppendLine(@"~$*");
            sb.AppendLine(@"*~");
            sb.AppendLine(@"*.dbmdl");
            sb.AppendLine(@"*.dbproj.schemaview");
            sb.AppendLine(@"*.pfx");
            sb.AppendLine(@"*.publishsettings");
            sb.AppendLine(@"node_modules/");
            sb.AppendLine(@"orleans.codegen.cs");
            sb.AppendLine(@"# Since there are multiple workflows, uncomment next line to ignore bower_components");
            sb.AppendLine(@"# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)");
            sb.AppendLine(@"#bower_components/");
            sb.AppendLine(@"# RIA/Silverlight projects");
            sb.AppendLine(@"Generated_Code/");
            sb.AppendLine(@"# Backup & report files from converting an old project file");
            sb.AppendLine(@"# to a newer Visual Studio version. Backup files are not needed,");
            sb.AppendLine(@"# because we have git ;-)");
            sb.AppendLine(@"_UpgradeReport_Files/");
            sb.AppendLine(@"Backup*/");
            sb.AppendLine(@"UpgradeLog*.XML");
            sb.AppendLine(@"UpgradeLog*.htm");
            sb.AppendLine(@"# SQL Server files");
            sb.AppendLine(@"*.mdf");
            sb.AppendLine(@"*.ldf");
            sb.AppendLine(@"# Business Intelligence projects");
            sb.AppendLine(@"*.rdl.data");
            sb.AppendLine(@"*.bim.layout");
            sb.AppendLine(@"*.bim_*.settings");
            sb.AppendLine(@"# Microsoft Fakes");
            sb.AppendLine(@"FakesAssemblies/");
            sb.AppendLine(@"# GhostDoc plugin setting file");
            sb.AppendLine(@"*.GhostDoc.xml");
            sb.AppendLine(@"# Node.js Tools for Visual Studio");
            sb.AppendLine(@".ntvs_analysis.dat");
            sb.AppendLine(@"# Visual Studio 6 build log");
            sb.AppendLine(@"*.plg");
            sb.AppendLine(@"# Visual Studio 6 workspace options file");
            sb.AppendLine(@"*.opt");
            sb.AppendLine(@"# Visual Studio LightSwitch build output");
            sb.AppendLine(@"**/*.HTMLClient/GeneratedArtifacts");
            sb.AppendLine(@"**/*.DesktopClient/GeneratedArtifacts");
            sb.AppendLine(@"**/*.DesktopClient/ModelManifest.xml");
            sb.AppendLine(@"**/*.Server/GeneratedArtifacts");
            sb.AppendLine(@"**/*.Server/ModelManifest.xml");
            sb.AppendLine(@"_Pvt_Extensions");
            sb.AppendLine(@"# Paket dependency manager");
            sb.AppendLine(@".paket/paket.exe");
            sb.AppendLine(@"paket-files/");
            sb.AppendLine(@"# FAKE - F# Make");
            sb.AppendLine(@".fake/");
            sb.AppendLine(@"# JetBrains Rider");
            sb.AppendLine(@".idea/");
            sb.AppendLine(@"*.sln.iml");
            sb.AppendLine(@"# =========================");
            sb.AppendLine(@"# Operating System Files");
            sb.AppendLine(@"# =========================");
            sb.AppendLine(@"# OSX");
            sb.AppendLine(@"# =========================");
            sb.AppendLine(@".DS_Store");
            sb.AppendLine(@".AppleDouble");
            sb.AppendLine(@".LSOverride");
            sb.AppendLine(@"# Thumbnails");
            sb.AppendLine(@"._*");
            sb.AppendLine(@"# Files that might appear in the root of a volume");
            sb.AppendLine(@".DocumentRevisions-V100");
            sb.AppendLine(@".fseventsd");
            sb.AppendLine(@".Spotlight-V100");
            sb.AppendLine(@".TemporaryItems");
            sb.AppendLine(@".Trashes");
            sb.AppendLine(@".VolumeIcon.icns");
            sb.AppendLine(@"# Directories potentially created on remote AFP share");
            sb.AppendLine(@".AppleDB");
            sb.AppendLine(@".AppleDesktop");
            sb.AppendLine(@"Network Trash Folder");
            sb.AppendLine(@"Temporary Items");
            sb.AppendLine(@".apdisk");
            sb.AppendLine(@"# Windows");
            sb.AppendLine(@"# =========================");
            sb.AppendLine(@"# Windows image file caches");
            sb.AppendLine(@"Thumbs.db");
            sb.AppendLine(@"ehthumbs.db");
            sb.AppendLine(@"# Folder config file");
            sb.AppendLine(@"Desktop.ini");
            sb.AppendLine(@"# Recycle Bin used on file shares");
            sb.AppendLine(@"$RECYCLE.BIN/");
            sb.AppendLine(@"# Windows Installer files");
            sb.AppendLine(@"*.cab");
            sb.AppendLine(@"*.msi");
            sb.AppendLine(@"*.msm");
            sb.AppendLine(@"*.msp");
            sb.AppendLine(@"# Windows shortcuts");
            sb.AppendLine(@"*.lnk");
            return sb.ToString();
        }

        private static string GenerateLicenseTxtContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"MIT License");
            sb.AppendLine(@"");
            sb.AppendLine(@"Copyright (c) 2017 ollon");
            sb.AppendLine(@"");
            sb.AppendLine(@"Permission is hereby granted, free of charge, to any person obtaining a copy");
            sb.AppendLine(@"of this software and associated documentation files (the ""Software""), to deal");
            sb.AppendLine(@"in the Software without restriction, including without limitation the rights");
            sb.AppendLine(@"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell");
            sb.AppendLine(@"copies of the Software, and to permit persons to whom the Software is");
            sb.AppendLine(@"furnished to do so, subject to the following conditions:");
            sb.AppendLine(@"");
            sb.AppendLine(@"The above copyright notice and this permission notice shall be included in all");
            sb.AppendLine(@"copies or substantial portions of the Software.");
            sb.AppendLine(@"");
            sb.AppendLine(@"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR");
            sb.AppendLine(@"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,");
            sb.AppendLine(@"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE");
            sb.AppendLine(@"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER");
            sb.AppendLine(@"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,");
            sb.AppendLine(@"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE");
            sb.AppendLine(@"SOFTWARE.");
            return sb.ToString();
        }

        private static string GeneratereadmeMDContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"### Solution");
            return sb.ToString();
        }

        private static string GeneraterebuildCmdContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"@echo off");
            sb.AppendLine(@"pushd ""%~dp0""");
            sb.AppendLine(@"cls");
            sb.AppendLine(@"for /f ""tokens=*"" %%i IN ('""%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"" -property installationPath') DO (");
            sb.AppendLine(@"set VSINSTALLPATH=%%i");
            sb.AppendLine(@"set TOOLSPATH=%%i\Common7\Tools");
            sb.AppendLine(@"set DEVENVDIR=%%i\Common7\IDE\");
            sb.AppendLine(@"set DEVCMD=%%i\Common7\Tools\VsDevCmd.bat");
            sb.AppendLine(@")");
            sb.AppendLine(@"for /f ""tokens=*"" %%j IN ('dir src\*.sln /b') DO (");
            sb.AppendLine(@"set SOLUTIONFILE=%~dp0src\%%j");
            sb.AppendLine(@")");
            sb.AppendLine(@"call ""%DEVCMD%""");
            sb.AppendLine(@"popd");
            sb.AppendLine(@"msbuild ""%SOLUTIONFILE%"" /t:ReBuild /m /v:m ");
            sb.AppendLine(@"echo Complete!");
            sb.AppendLine(@"pause");
            sb.AppendLine(@"exit /b");
            return sb.ToString();
        }

        private static string GeneraterestoreCmdContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"@echo off");
            sb.AppendLine(@"pushd ""%~dp0""");
            sb.AppendLine(@"cls");
            sb.AppendLine(@"for /f ""tokens=*"" %%i IN ('""%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"" -property installationPath') DO (");
            sb.AppendLine(@"set VSINSTALLPATH=%%i");
            sb.AppendLine(@"set TOOLSPATH=%%i\Common7\Tools");
            sb.AppendLine(@"set DEVENVDIR=%%i\Common7\IDE\");
            sb.AppendLine(@"set DEVCMD=%%i\Common7\Tools\VsDevCmd.bat");
            sb.AppendLine(@")");
            sb.AppendLine(@"for /f ""tokens=*"" %%j IN ('dir src\*.sln /b') DO (");
            sb.AppendLine(@"set SOLUTIONFILE=%~dp0src\%%j");
            sb.AppendLine(@")");
            sb.AppendLine(@"call ""%DEVCMD%""");
            sb.AppendLine(@"popd");
            sb.AppendLine(@"msbuild ""%SOLUTIONFILE%"" /t:Restore /m /v:m ");
            sb.AppendLine(@"echo Complete!");
            sb.AppendLine(@"pause");
            sb.AppendLine(@"exit /b");
            return sb.ToString();
        }

        private static string GenerateshellCmdContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"@echo off");
            sb.AppendLine(@"start cmd");
            sb.AppendLine(@"exit");
            return sb.ToString();
        }

        private static string GeneratetfignoreTfignoreContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"## Ignore Visual Studio temporary files, build results, and");
            sb.AppendLine(@"## files generated by popular Visual Studio add-ons.");
            sb.AppendLine(@"# User-specific files");
            sb.AppendLine(@"*.suo");
            sb.AppendLine(@"*.user");
            sb.AppendLine(@"*.userosscache");
            sb.AppendLine(@"*.sln.docstates");
            sb.AppendLine(@"# User-specific files (MonoDevelop/Xamarin Studio)");
            sb.AppendLine(@"*.userprefs");
            sb.AppendLine(@"# Build results");
            sb.AppendLine(@"[Dd]ebug/");
            sb.AppendLine(@"[Dd]ebugPublic/");
            sb.AppendLine(@"[Rr]elease/");
            sb.AppendLine(@"[Rr]eleases/");
            sb.AppendLine(@"x64/");
            sb.AppendLine(@"x86/");
            sb.AppendLine(@"bld/");
            sb.AppendLine(@"[Bb]in/");
            sb.AppendLine(@"[Oo]bj/");
            sb.AppendLine(@"[Ll]og/");
            sb.AppendLine(@"[Bb]inaries/");
            sb.AppendLine(@"![Bb]uild");
            sb.AppendLine(@"*.lock.json");
            sb.AppendLine(@"NuGet.exe");
            sb.AppendLine(@"# Visual Studio 2015 cache/options directory");
            sb.AppendLine(@".vs/");
            sb.AppendLine(@"# Uncomment if you have tasks that create the project's static files in wwwroot");
            sb.AppendLine(@"#wwwroot/");
            sb.AppendLine(@"# MSTest test Results");
            sb.AppendLine(@"[Tt]est[Rr]esult*/");
            sb.AppendLine(@"[Bb]uild[Ll]og.*");
            sb.AppendLine(@"# NUNIT");
            sb.AppendLine(@"*.VisualState.xml");
            sb.AppendLine(@"TestResult.xml");
            sb.AppendLine(@"# Build Results of an ATL Project");
            sb.AppendLine(@"[Dd]ebugPS/");
            sb.AppendLine(@"[Rr]eleasePS/");
            sb.AppendLine(@"dlldata.c");
            sb.AppendLine(@"# DNX");
            sb.AppendLine(@"project.lock.json");
            sb.AppendLine(@"artifacts/");
            sb.AppendLine(@"*_i.c");
            sb.AppendLine(@"*_p.c");
            sb.AppendLine(@"*_i.h");
            sb.AppendLine(@"*.ilk");
            sb.AppendLine(@"*.meta");
            sb.AppendLine(@"*.obj");
            sb.AppendLine(@"*.pch");
            sb.AppendLine(@"*.pdb");
            sb.AppendLine(@"*.pgc");
            sb.AppendLine(@"*.pgd");
            sb.AppendLine(@"*.rsp");
            sb.AppendLine(@"*.sbr");
            sb.AppendLine(@"*.tlb");
            sb.AppendLine(@"*.tli");
            sb.AppendLine(@"*.tlh");
            sb.AppendLine(@"*.tmp");
            sb.AppendLine(@"*.tmp_proj");
            sb.AppendLine(@"*.log");
            sb.AppendLine(@"*.vspscc");
            sb.AppendLine(@"*.vssscc");
            sb.AppendLine(@".builds");
            sb.AppendLine(@"*.pidb");
            sb.AppendLine(@"*.svclog");
            sb.AppendLine(@"*.scc");
            sb.AppendLine(@"# Chutzpah Test files");
            sb.AppendLine(@"_Chutzpah*");
            sb.AppendLine(@"# Visual C++ cache files");
            sb.AppendLine(@"ipch/");
            sb.AppendLine(@"*.aps");
            sb.AppendLine(@"*.ncb");
            sb.AppendLine(@"*.opendb");
            sb.AppendLine(@"*.opensdf");
            sb.AppendLine(@"*.sdf");
            sb.AppendLine(@"*.cachefile");
            sb.AppendLine(@"*.VC.db");
            sb.AppendLine(@"*.VC.VC.opendb");
            sb.AppendLine(@"# Visual Studio profiler");
            sb.AppendLine(@"*.psess");
            sb.AppendLine(@"*.vsp");
            sb.AppendLine(@"*.vspx");
            sb.AppendLine(@"*.sap");
            sb.AppendLine(@"# TFS 2012 Local Workspace");
            sb.AppendLine(@"$tf/");
            sb.AppendLine(@"# Guidance Automation Toolkit");
            sb.AppendLine(@"*.gpState");
            sb.AppendLine(@"# ReSharper is a .NET coding add-in");
            sb.AppendLine(@"_ReSharper*/");
            sb.AppendLine(@"*.[Rr]e[Ss]harper");
            sb.AppendLine(@"*.DotSettings.user");
            sb.AppendLine(@"# JustCode is a .NET coding add-in");
            sb.AppendLine(@".JustCode");
            sb.AppendLine(@"# TeamCity is a build add-in");
            sb.AppendLine(@"_TeamCity*");
            sb.AppendLine(@"# DotCover is a Code Coverage Tool");
            sb.AppendLine(@"*.dotCover");
            sb.AppendLine(@"# NCrunch");
            sb.AppendLine(@"_NCrunch_*");
            sb.AppendLine(@".*crunch*.local.xml");
            sb.AppendLine(@"nCrunchTemp_*");
            sb.AppendLine(@"# MightyMoose");
            sb.AppendLine(@"*.mm.*");
            sb.AppendLine(@"AutoTest.Net/");
            sb.AppendLine(@"# Web workbench (sass)");
            sb.AppendLine(@".sass-cache/");
            sb.AppendLine(@"# Installshield output folder");
            sb.AppendLine(@"[Ee]xpress/");
            sb.AppendLine(@"# DocProject is a documentation generator add-in");
            sb.AppendLine(@"DocProject/buildhelp/");
            sb.AppendLine(@"DocProject/Help/*.HxT");
            sb.AppendLine(@"DocProject/Help/*.HxC");
            sb.AppendLine(@"DocProject/Help/*.hhc");
            sb.AppendLine(@"DocProject/Help/*.hhk");
            sb.AppendLine(@"DocProject/Help/*.hhp");
            sb.AppendLine(@"DocProject/Help/Html2");
            sb.AppendLine(@"DocProject/Help/html");
            sb.AppendLine(@"# Click-Once directory");
            sb.AppendLine(@"publish/");
            sb.AppendLine(@"# Publish Web Output");
            sb.AppendLine(@"*.[Pp]ublish.xml");
            sb.AppendLine(@"*.azurePubxml");
            sb.AppendLine(@"# TODO: Comment the next line if you want to checkin your web deploy settings");
            sb.AppendLine(@"# but database connection strings (with potential passwords) will be unencrypted");
            sb.AppendLine(@"*.pubxml");
            sb.AppendLine(@"*.publishproj");
            sb.AppendLine(@"# Microsoft Azure Web App publish settings. Comment the next line if you want to");
            sb.AppendLine(@"# checkin your Azure Web App publish settings, but sensitive information contained");
            sb.AppendLine(@"# in these scripts will be unencrypted");
            sb.AppendLine(@"PublishScripts/");
            sb.AppendLine(@"# NuGet Packages");
            sb.AppendLine(@"#*.nupkg");
            sb.AppendLine(@"# The packages folder can be ignored because of Package Restore");
            sb.AppendLine(@"**/packages/*");
            sb.AppendLine(@"# except build/, which is used as an MSBuild target.");
            sb.AppendLine(@"!**/packages/build/");
            sb.AppendLine(@"# Uncomment if necessary however generally it will be regenerated when needed");
            sb.AppendLine(@"#!**/packages/repositories.config");
            sb.AppendLine(@"# NuGet v3's project.json files produces more ignoreable files");
            sb.AppendLine(@"*.nuget.props");
            sb.AppendLine(@"*.nuget.targets");
            sb.AppendLine(@"# Microsoft Azure Build Output");
            sb.AppendLine(@"csx/");
            sb.AppendLine(@"*.build.csdef");
            sb.AppendLine(@"# Microsoft Azure Emulator");
            sb.AppendLine(@"ecf/");
            sb.AppendLine(@"rcf/");
            sb.AppendLine(@"# Windows Store app package directories and files");
            sb.AppendLine(@"AppPackages/");
            sb.AppendLine(@"BundleArtifacts/");
            sb.AppendLine(@"Package.StoreAssociation.xml");
            sb.AppendLine(@"_pkginfo.txt");
            sb.AppendLine(@"# Visual Studio cache files");
            sb.AppendLine(@"# files ending in .cache can be ignored");
            sb.AppendLine(@"*.[Cc]ache");
            sb.AppendLine(@"# but keep track of directories ending in .cache");
            sb.AppendLine(@"!*.[Cc]ache/");
            sb.AppendLine(@"# Others");
            sb.AppendLine(@"ClientBin/");
            sb.AppendLine(@"~$*");
            sb.AppendLine(@"*~");
            sb.AppendLine(@"*.dbmdl");
            sb.AppendLine(@"*.dbproj.schemaview");
            sb.AppendLine(@"*.pfx");
            sb.AppendLine(@"*.publishsettings");
            sb.AppendLine(@"node_modules/");
            sb.AppendLine(@"orleans.codegen.cs");
            sb.AppendLine(@"# Since there are multiple workflows, uncomment next line to ignore bower_components");
            sb.AppendLine(@"# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)");
            sb.AppendLine(@"#bower_components/");
            sb.AppendLine(@"# RIA/Silverlight projects");
            sb.AppendLine(@"Generated_Code/");
            sb.AppendLine(@"# Backup & report files from converting an old project file");
            sb.AppendLine(@"# to a newer Visual Studio version. Backup files are not needed,");
            sb.AppendLine(@"# because we have git ;-)");
            sb.AppendLine(@"_UpgradeReport_Files/");
            sb.AppendLine(@"Backup*/");
            sb.AppendLine(@"UpgradeLog*.XML");
            sb.AppendLine(@"UpgradeLog*.htm");
            sb.AppendLine(@"# SQL Server files");
            sb.AppendLine(@"*.mdf");
            sb.AppendLine(@"*.ldf");
            sb.AppendLine(@"# Business Intelligence projects");
            sb.AppendLine(@"*.rdl.data");
            sb.AppendLine(@"*.bim.layout");
            sb.AppendLine(@"*.bim_*.settings");
            sb.AppendLine(@"# Microsoft Fakes");
            sb.AppendLine(@"FakesAssemblies/");
            sb.AppendLine(@"# GhostDoc plugin setting file");
            sb.AppendLine(@"*.GhostDoc.xml");
            sb.AppendLine(@"# Node.js Tools for Visual Studio");
            sb.AppendLine(@".ntvs_analysis.dat");
            sb.AppendLine(@"# Visual Studio 6 build log");
            sb.AppendLine(@"*.plg");
            sb.AppendLine(@"# Visual Studio 6 workspace options file");
            sb.AppendLine(@"*.opt");
            sb.AppendLine(@"# Visual Studio LightSwitch build output");
            sb.AppendLine(@"**/*.HTMLClient/GeneratedArtifacts");
            sb.AppendLine(@"**/*.DesktopClient/GeneratedArtifacts");
            sb.AppendLine(@"**/*.DesktopClient/ModelManifest.xml");
            sb.AppendLine(@"**/*.Server/GeneratedArtifacts");
            sb.AppendLine(@"**/*.Server/ModelManifest.xml");
            sb.AppendLine(@"_Pvt_Extensions");
            sb.AppendLine(@"# Paket dependency manager");
            sb.AppendLine(@".paket/paket.exe");
            sb.AppendLine(@"paket-files/");
            sb.AppendLine(@"# FAKE - F# Make");
            sb.AppendLine(@".fake/");
            sb.AppendLine(@"# JetBrains Rider");
            sb.AppendLine(@".idea/");
            sb.AppendLine(@"*.sln.iml");
            sb.AppendLine(@"# =========================");
            sb.AppendLine(@"# Operating System Files");
            sb.AppendLine(@"# =========================");
            sb.AppendLine(@"# OSX");
            sb.AppendLine(@"# =========================");
            sb.AppendLine(@".DS_Store");
            sb.AppendLine(@".AppleDouble");
            sb.AppendLine(@".LSOverride");
            sb.AppendLine(@"# Thumbnails");
            sb.AppendLine(@"._*");
            sb.AppendLine(@"# Files that might appear in the root of a volume");
            sb.AppendLine(@".DocumentRevisions-V100");
            sb.AppendLine(@".fseventsd");
            sb.AppendLine(@".Spotlight-V100");
            sb.AppendLine(@".TemporaryItems");
            sb.AppendLine(@".Trashes");
            sb.AppendLine(@".VolumeIcon.icns");
            sb.AppendLine(@"# Directories potentially created on remote AFP share");
            sb.AppendLine(@".AppleDB");
            sb.AppendLine(@".AppleDesktop");
            sb.AppendLine(@"Network Trash Folder");
            sb.AppendLine(@"Temporary Items");
            sb.AppendLine(@".apdisk");
            sb.AppendLine(@"# Windows");
            sb.AppendLine(@"# =========================");
            sb.AppendLine(@"# Windows image file caches");
            sb.AppendLine(@"Thumbs.db");
            sb.AppendLine(@"ehthumbs.db");
            sb.AppendLine(@"# Folder config file");
            sb.AppendLine(@"Desktop.ini");
            sb.AppendLine(@"# Recycle Bin used on file shares");
            sb.AppendLine(@"$RECYCLE.BIN/");
            sb.AppendLine(@"# Windows Installer files");
            sb.AppendLine(@"*.cab");
            sb.AppendLine(@"*.msi");
            sb.AppendLine(@"*.msm");
            sb.AppendLine(@"*.msp");
            sb.AppendLine(@"# Windows shortcuts");
            sb.AppendLine(@"*.lnk");
            return sb.ToString();
        }

        private static string GenerateSolutionRulesRulesetContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"<?xml version=""1.0"" encoding=""utf-8""?>");
            sb.AppendLine(@"<RuleSet Name=""Solution Rules"" Description=""Solution Rules"" ToolsVersion=""15.0"">");
            sb.AppendLine(@"  <Include Path=""extendedcorrectnessrules.ruleset"" Action=""Default"" />");
            sb.AppendLine(@"  <Include Path=""extendeddesignguidelinerules.ruleset"" Action=""Default"" />");
            sb.AppendLine(@"  <Rules AnalyzerId=""Microsoft.CodeAnalysis.CSharp"" RuleNamespace=""Microsoft.CodeAnalysis.CSharp"">");
            sb.AppendLine(@"    <Rule Id=""AD0001"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0078"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0105"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0108"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0109"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0114"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0162"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0164"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0168"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0183"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0184"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0197"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0219"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0251"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0252"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0253"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0278"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0279"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0280"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0282"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0419"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0420"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0435"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0436"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0437"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0440"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0458"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0464"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0465"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0469"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0472"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0473"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0612"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0618"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0626"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0628"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0642"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0652"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0657"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0658"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0659"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0660"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0661"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0665"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0672"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0675"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0684"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0693"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0728"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0809"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0811"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS0824"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1030"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1058"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1062"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1064"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1066"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1072"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1522"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1570"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1571"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1572"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1573"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1574"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1580"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1581"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1584"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1587"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1589"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1590"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1591"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1592"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1616"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1633"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1634"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1635"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1645"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1658"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1668"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1685"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1687"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1690"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1692"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1695"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1696"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1697"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1700"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1701"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1702"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1710"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1711"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1712"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1717"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1718"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1720"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1723"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1734"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1735"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1762"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1927"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1956"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1957"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1974"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1981"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS1998"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS2002"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS2008"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS2023"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS2029"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS2038"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3000"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3001"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3002"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3003"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3005"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3006"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3007"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3008"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3009"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3010"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3011"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3012"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3013"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3014"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3015"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3016"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3017"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3018"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3019"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3021"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3022"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3023"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3024"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3026"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS3027"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS4014"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS4024"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS4025"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS4026"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS7033"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS7035"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS7080"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS7081"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS7082"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS7090"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS7095"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8001"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8002"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8009"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8012"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8018"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8019"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8020"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8021"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8029"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8032"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8033"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8034"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8040"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8073"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8094"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8105"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""CS8123"" Action=""None"" />");
            sb.AppendLine(@"  </Rules>");
            sb.AppendLine(@"  <Rules AnalyzerId=""Microsoft.CodeAnalysis.CSharp.EditorFeatures"" RuleNamespace=""Microsoft.CodeAnalysis.CSharp.EditorFeatures"">");
            sb.AppendLine(@"    <Rule Id=""IDE0032"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0032WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"  </Rules>");
            sb.AppendLine(@"  <Rules AnalyzerId=""Microsoft.CodeAnalysis.CSharp.Features"" RuleNamespace=""Microsoft.CodeAnalysis.CSharp.Features"">");
            sb.AppendLine(@"    <Rule Id=""IDE0001"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0002"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0003"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0004"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0005"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0007"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0007WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0008"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0008WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0009"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0009WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0011"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0011WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0012"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0013"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0014"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0015"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0016"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0016WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0017"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0017WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0018"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0018WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0019"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0019WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0020"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0020WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0021"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0021WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0022"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0022WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0023"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0023WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0024"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0024WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0025"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0025WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0026"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0026WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0027"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0027WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0028"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0028WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0029"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0029WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0030"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0030WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0031"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0031WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE1005"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE1005WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE1006"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE1006WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"  </Rules>");
            sb.AppendLine(@"  <Rules AnalyzerId=""Microsoft.CodeAnalysis.Features"" RuleNamespace=""Microsoft.CodeAnalysis.Features"">");
            sb.AppendLine(@"    <Rule Id=""IDE0010"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0010WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0033"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""IDE0033WithoutSuggestion"" Action=""None"" />");
            sb.AppendLine(@"  </Rules>");
            sb.AppendLine(@"  <Rules AnalyzerId=""Roslynator.CSharp.Analyzers"" RuleNamespace=""Roslynator.CSharp.Analyzers"">");
            sb.AppendLine(@"    <Rule Id=""RCS1005FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1006FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1010"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1015FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1021FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1032FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1047FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1048FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1049FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1058FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1061FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1071"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1089FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1091FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1110"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1112FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1114FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1124FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1127FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1166"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1174FadeOut"" Action=""None"" />");
            sb.AppendLine(@"    <Rule Id=""RCS1182"" Action=""None"" />");
            sb.AppendLine(@"  </Rules>");
            sb.AppendLine(@"</RuleSet>");
            return sb.ToString();
        }

        private static string GenerateContributorCovenantMDContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"# Contributor Covenant Code of Conduct");
            sb.AppendLine(@"");
            sb.AppendLine(@"## Our Pledge");
            sb.AppendLine(@"");
            sb.AppendLine(@"In the interest of fostering an open and welcoming environment, we as");
            sb.AppendLine(@"contributors and maintainers pledge to making participation in our project and");
            sb.AppendLine(@"our community a harassment-free experience for everyone, regardless of age, body");
            sb.AppendLine(@"size, disability, ethnicity, gender identity and expression, level of experience,");
            sb.AppendLine(@"nationality, personal appearance, race, religion, or sexual identity and");
            sb.AppendLine(@"orientation.");
            sb.AppendLine(@"");
            sb.AppendLine(@"## Our Standards");
            sb.AppendLine(@"");
            sb.AppendLine(@"Examples of behavior that contributes to creating a positive environment");
            sb.AppendLine(@"include:");
            sb.AppendLine(@"");
            sb.AppendLine(@"* Using welcoming and inclusive language");
            sb.AppendLine(@"* Being respectful of differing viewpoints and experiences");
            sb.AppendLine(@"* Gracefully accepting constructive criticism");
            sb.AppendLine(@"* Focusing on what is best for the community");
            sb.AppendLine(@"* Showing empathy towards other community members");
            sb.AppendLine(@"");
            sb.AppendLine(@"Examples of unacceptable behavior by participants include:");
            sb.AppendLine(@"");
            sb.AppendLine(@"* The use of sexualized language or imagery and unwelcome sexual attention or");
            sb.AppendLine(@"  advances");
            sb.AppendLine(@"* Trolling, insulting/derogatory comments, and personal or political attacks");
            sb.AppendLine(@"* Public or private harassment");
            sb.AppendLine(@"* Publishing others' private information, such as a physical or electronic");
            sb.AppendLine(@"  address, without explicit permission");
            sb.AppendLine(@"* Other conduct which could reasonably be considered inappropriate in a");
            sb.AppendLine(@"  professional setting");
            sb.AppendLine(@"");
            sb.AppendLine(@"## Our Responsibilities");
            sb.AppendLine(@"");
            sb.AppendLine(@"Project maintainers are responsible for clarifying the standards of acceptable");
            sb.AppendLine(@"behavior and are expected to take appropriate and fair corrective action in");
            sb.AppendLine(@"response to any instances of unacceptable behavior.");
            sb.AppendLine(@"");
            sb.AppendLine(@"Project maintainers have the right and responsibility to remove, edit, or");
            sb.AppendLine(@"reject comments, commits, code, wiki edits, issues, and other contributions");
            sb.AppendLine(@"that are not aligned to this Code of Conduct, or to ban temporarily or");
            sb.AppendLine(@"permanently any contributor for other behaviors that they deem inappropriate,");
            sb.AppendLine(@"threatening, offensive, or harmful.");
            sb.AppendLine(@"");
            sb.AppendLine(@"## Scope");
            sb.AppendLine(@"");
            sb.AppendLine(@"This Code of Conduct applies both within project spaces and in public spaces");
            sb.AppendLine(@"when an individual is representing the project or its community. Examples of");
            sb.AppendLine(@"representing a project or community include using an official project e-mail");
            sb.AppendLine(@"address, posting via an official social media account, or acting as an appointed");
            sb.AppendLine(@"representative at an online or offline event. Representation of a project may be");
            sb.AppendLine(@"further defined and clarified by project maintainers.");
            sb.AppendLine(@"");
            sb.AppendLine(@"## Enforcement");
            sb.AppendLine(@"");
            sb.AppendLine(@"Instances of abusive, harassing, or otherwise unacceptable behavior may be");
            sb.AppendLine(@"reported by contacting the project team at bmarshall@ollon.us. All");
            sb.AppendLine(@"complaints will be reviewed and investigated and will result in a response that");
            sb.AppendLine(@"is deemed necessary and appropriate to the circumstances. The project team is");
            sb.AppendLine(@"obligated to maintain confidentiality with regard to the reporter of an incident.");
            sb.AppendLine(@"Further details of specific enforcement policies may be posted separately.");
            sb.AppendLine(@"");
            sb.AppendLine(@"Project maintainers who do not follow or enforce the Code of Conduct in good");
            sb.AppendLine(@"faith may face temporary or permanent repercussions as determined by other");
            sb.AppendLine(@"members of the project's leadership.");
            sb.AppendLine(@"");
            sb.AppendLine(@"## Attribution");
            sb.AppendLine(@"");
            sb.AppendLine(@"This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,");
            sb.AppendLine(@"available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html");
            sb.AppendLine(@"");
            sb.AppendLine(@"[homepage]: https://www.contributor-covenant.org");
            return sb.ToString();
        }

        private static string GenerateDirectoryBuildPropsContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"<?xml version=""1.0"" encoding=""utf-8""?>");
            sb.AppendLine(@"<!--");
            sb.AppendLine(@"*********************************************************************************************** ");
            sb.AppendLine(@"Directory.Build.props");
            sb.AppendLine(@"");
            sb.AppendLine(@"WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have");
            sb.AppendLine(@"          created a backup copy.  Incorrect changes to this file will make it");
            sb.AppendLine(@"          impossible to load or build your projects from the command-line or the IDE.");
            sb.AppendLine(@"");
            sb.AppendLine(@"Copyright (c) Ollon, LLC. All rights reserved. ");
            sb.AppendLine(@"***********************************************************************************************");
            sb.AppendLine(@"-->");
            sb.AppendLine(@"<Project>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <RestoreSources>");
            sb.AppendLine(@"      $(RestoreSources);");
            sb.AppendLine(@"      https://api.nuget.org/v3/index.json;");
            sb.AppendLine(@"      https://www.myget.org/F/ollon-buildtools/api/v3/index.json;");
            sb.AppendLine(@"      https://powershell.myget.org/F/powershell-core/api/v3/index.json;");
            sb.AppendLine(@"      https://dotnet.myget.org/F/dotnet-core/api/v3/index.json;");
            sb.AppendLine(@"      http://www.myget.org/F/vs-devcore/api/v3/index.json;");
            sb.AppendLine(@"      https://dotnet.myget.org/F/msbuild/api/v3/index.json;");
            sb.AppendLine(@"      https://dotnet.myget.org/F/nuget-build/api/v3/index.json;");
            sb.AppendLine(@"      https://dotnet.myget.org/F/roslyn/api/v3/index.json;");
            sb.AppendLine(@"      https://dotnet.myget.org/F/roslyn-analyzers/api/v3/index.json;");
            sb.AppendLine(@"      https://dotnet.myget.org/F/roslyn-tools/api/v3/index.json;");
            sb.AppendLine(@"      https://dotnet.myget.org/F/templating/api/v3/index.json;");
            sb.AppendLine(@"    </RestoreSources>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--                              -->");
            sb.AppendLine(@"  <!--   Nuget Minimum Capabilities -->");
            sb.AppendLine(@"  <!--                              -->");
            sb.AppendLine(@"  <ItemGroup>");
            sb.AppendLine(@"    <ProjectCapability Include=""AssemblyReferences"" />");
            sb.AppendLine(@"    <ProjectCapability Include=""DeclaredSourceItems"" />");
            sb.AppendLine(@"    <ProjectCapability Include=""UserSourceItems"" />");
            sb.AppendLine(@"  </ItemGroup>");
            sb.AppendLine(@"  ");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <RuntimeIdentifiers Condition=""'$(RuntimeIdentifiers)'==''"">win</RuntimeIdentifiers>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"  ");
            sb.AppendLine(@"  <!--                         -->");
            sb.AppendLine(@"  <!--   Legacy Frameworks     -->");
            sb.AppendLine(@"  <!--                         -->");
            sb.AppendLine(@"  <PropertyGroup Condition="" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "" />");
            sb.AppendLine(@"  <PropertyGroup Condition="" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "" />");
            sb.AppendLine(@"  <PropertyGroup Condition="" '$(Configuration)|$(Platform)' == 'Exp|AnyCPU' "" />");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--                    -->");
            sb.AppendLine(@"  <!--   Build Output     -->");
            sb.AppendLine(@"  <!--                    -->");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <UseCommonOutputDirectory Condition=""'$(UseCommonOutputDirectory)' == ''"">false</UseCommonOutputDirectory>");
            sb.AppendLine(@"    <WindowsAppContainer Condition=""'$(WindowsAppContainer)' == ''"">false</WindowsAppContainer>");
            sb.AppendLine(@"    <UseSharedCompilation Condition=""'$(UseSharedCompilation)' == ''"">true</UseSharedCompilation>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--                   -->");
            sb.AppendLine(@"  <!--   Configuration   -->");
            sb.AppendLine(@"  <!--                   -->");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <Configuration>Debug</Configuration>");
            sb.AppendLine(@"    <Platform>AnyCPU</Platform>");
            sb.AppendLine(@"    <LangVersion>latest</LangVersion>");
            sb.AppendLine(@"    <DebugType>full</DebugType>");
            sb.AppendLine(@"    <DebugSymbols>true</DebugSymbols>");
            sb.AppendLine(@"    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>");
            sb.AppendLine(@"    <AssemblyName Condition=""'$(AssemblyName)' == ''"">$(MSBuildProjectName)</AssemblyName>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <ForceGenerationOfBindingRedirects Condition=""'$(GenerateMSBuildBindingRedirects)' != ''"">true</ForceGenerationOfBindingRedirects>");
            sb.AppendLine(@"    <AutoGenerateBindingRedirects Condition=""'$(ForceGenerationOfBindingRedirects)' == 'true'"">true</AutoGenerateBindingRedirects>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <EnableSignAssembly Condition=""'$(EnableSignAssembly)' == ''"">true</EnableSignAssembly>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <TargetFramework Condition=""'$(TargetFramework)' == ''"">net47</TargetFramework>");
            sb.AppendLine(@"    <TargetFrameworkVersion Condition=""'$(TargetFrameworkVersion)' == ''"">v4.7</TargetFrameworkVersion>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <EnableGlobbing Condition=""'$(EnableGlobbing)' == ''"">false</EnableGlobbing>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <NoWarn>$(NoWarn);CS0649;IDE0001;IDE0003;IDE0008;CS00067</NoWarn>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <AutogenerateBindingRedirects Condition=""'$(AutogenerateBindingRedirects)' == ''"">true</AutogenerateBindingRedirects>");
            sb.AppendLine(@"    <DisableImplicitFrameworkReferences Condition=""'$(DisableImplicitFrameworkReferences)' == ''"">true</DisableImplicitFrameworkReferences>");
            sb.AppendLine(@"    <AppendTargetFrameworkToOutputPath Condition=""'$(AppendTargetFrameworkToOutputPath)' == ''"">false</AppendTargetFrameworkToOutputPath>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <SolutionDir>$(MSBuildThisFileDirectory)</SolutionDir>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <RepositoryDirectory>$([System.IO.Path]::GetFullPath('$(SolutionDir)..\'))</RepositoryDirectory>");
            sb.AppendLine(@"    <RepositoryDirectory Condition=""!HasTrailingSlash('$(RepositoryDirectory)')"">$(RepositoryDirectory)\</RepositoryDirectory>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <OutputPath>$(RepositoryDirectory)bin\$(Configuration)\$(MSBuildProjectName)\</OutputPath>");
            sb.AppendLine(@"    <BaseIntermediateOutputPath>$(RepositoryDirectory)bin\obj\$(MSBuildProjectName)\</BaseIntermediateOutputPath>");
            sb.AppendLine(@"    <IntermediateOutputPath>$(BaseIntermediateOutputPath)\$(Configuration)\</IntermediateOutputPath>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <HighEntropyVA>true</HighEntropyVA>");
            sb.AppendLine(@"    <Deterministic>True</Deterministic>");
            sb.AppendLine(@"    <RoslynPublicKey>0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9</RoslynPublicKey>");
            sb.AppendLine(@"    <RoslynInternalKey>002400000480000094000000060200000024000052534131000400000100010055e0217eb635f69281051f9a823e0c7edd90f28063eb6c7a742a19b4f6139778ee0af438f47aed3b6e9f99838aa8dba689c7a71ddb860c96d923830b57bbd5cd6119406ddb9b002cf1c723bf272d6acbb7129e9d6dd5a5309c94e0ff4b2c884d45a55f475cd7dba59198086f61f5a8c8b5e601c0edbf269733f6f578fc8579c2</RoslynInternalKey>");
            sb.AppendLine(@"    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)..\build\strong name keys\35MSSharedLib1024.snk</AssemblyOriginatorKeyFile>");
            sb.AppendLine(@"    <PublicKey>$(RoslynPublicKey)</PublicKey>");
            sb.AppendLine(@"    <PublicKeyToken>31BF3856AD364E35</PublicKeyToken>");
            sb.AppendLine(@"    <PublicSign>true</PublicSign>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--              -->");
            sb.AppendLine(@"  <!--   Globbing   -->");
            sb.AppendLine(@"  <!--              -->");
            sb.AppendLine(@"  <PropertyGroup Condition=""'$(EnableGlobbing)' == 'false'"">");
            sb.AppendLine(@"    <EnableDefaultItems>false</EnableDefaultItems>");
            sb.AppendLine(@"    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>");
            sb.AppendLine(@"    <EnableDefaultNoneItems>false</EnableDefaultNoneItems>");
            sb.AppendLine(@"    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>");
            sb.AppendLine(@"    <GenerateRuntimeConfigurationFiles>false</GenerateRuntimeConfigurationFiles>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--              -->");
            sb.AppendLine(@"  <!--   Versions   -->");
            sb.AppendLine(@"  <!--              -->");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <VisualStudioVersion>15.0</VisualStudioVersion>");
            sb.AppendLine(@"    <VisualStudioVersionMajor Condition=""'$(VisualStudioVersionMajor)' == ''"">15</VisualStudioVersionMajor>");
            sb.AppendLine(@"    <VisualStudioVersionMinor Condition=""'$(VisualStudioVersionMinor)' == ''"">5</VisualStudioVersionMinor>");
            sb.AppendLine(@"    <BuildNumber>0</BuildNumber>");
            sb.AppendLine(@"    <RevisionNumber>0</RevisionNumber>");
            sb.AppendLine(@"    <BuildVersion>1.0.0.0</BuildVersion>");
            sb.AppendLine(@"    <AssemblyBuildVersion>1.0.0.0</AssemblyBuildVersion>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--            -->");
            sb.AppendLine(@"  <!--   Global   -->");
            sb.AppendLine(@"  <!--            -->");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>");
            sb.AppendLine(@"    <CodeAnalysisRuleSet>$(RepositoryDirectory)build\rulesets\SolutionRules.ruleset</CodeAnalysisRuleSet>");
            sb.AppendLine(@"    <MinimumVisualStudioVersion>$(VisualStudioVersion)</MinimumVisualStudioVersion>");
            sb.AppendLine(@"    <VSToolsPath Condition=""'$(VSToolsPath)' == ''"">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--                              -->");
            sb.AppendLine(@"  <!--   NuGet Package Properties   -->");
            sb.AppendLine(@"  <!--                              -->");
            sb.AppendLine(@"  <PropertyGroup Label=""NuGet Packaging"">");
            sb.AppendLine(@"    <NuGetRepositoryDirectory Condition=""'$(NuGetRepositoryDirectory)' == ''"">$(SolutionDir)..\bin\nuget\</NuGetRepositoryDirectory>");
            sb.AppendLine(@"    <PackageOutputPath Condition=""'$(PackageOutputPath)' == ''"">$(OutputPath)nuget\</PackageOutputPath>");
            sb.AppendLine(@"    <NoPackageAnalysis Condition=""'$(NoPackageAnalysis)' == ''"">true</NoPackageAnalysis>");
            sb.AppendLine(@"    <GeneratePackageOnBuild Condition=""'$(GeneratePackageOnBuild)' == ''"">false</GeneratePackageOnBuild>");
            sb.AppendLine(@"    <IncludeBuildOutput Condition=""'$(IncludeBuildOutput)' == ''"">true</IncludeBuildOutput>");
            sb.AppendLine(@"    <CopyLocalLockFileAssemblies Condition=""'$(CopyLocalLockFileAssemblies)' == ''"">true</CopyLocalLockFileAssemblies>");
            sb.AppendLine(@"    <Authors Condition=""'$(Authors)'==''"">Brad R. Marshall</Authors>");
            sb.AppendLine(@"    <Company Condition=""'$(Company)'==''"">Ollon, LLC</Company>");
            sb.AppendLine(@"    <Copyright Condition=""'$(Copyright)'==''"">%A9 $([System.DateTime]::Now.Year) $(Company). All Rights Reserved.</Copyright>");
            sb.AppendLine(@"    <Description Condition=""'$(Description)'==''"">$(AssemblyName)</Description>");
            sb.AppendLine(@"    <Product Condition=""'$(Product)'==''"">$(AssemblyName)</Product>");
            sb.AppendLine(@"    <AssemblyTitle Condition=""'$(AssemblyTitle)'==''"">$(AssemblyName)</AssemblyTitle>");
            sb.AppendLine(@"    <AssemblyVersion Condition=""'$(AssemblyVersion)' == ''"">$(AssemblyBuildVersion)</AssemblyVersion>");
            sb.AppendLine(@"    <PackageVersion Condition=""'$(PackageVersion)' == ''"">$(AssemblyBuildVersion)</PackageVersion>");
            sb.AppendLine(@"    <InformationalVersion Condition=""'$(InformationalVersion)' == ''"">$(AssemblyBuildVersion)</InformationalVersion>");
            sb.AppendLine(@"    <AssemblyFileVersion Condition=""'$(AssemblyFileVersion)' == ''"">$(AssemblyBuildVersion)</AssemblyFileVersion>");
            sb.AppendLine(@"    <PackageReleaseNotes Condition=""'$(PackageReleaseNotes)' == ''"">$(MSBuildProjectName)</PackageReleaseNotes>");
            sb.AppendLine(@"    <PackageProjectUrl Condition=""'$(PackageProjectUrl)' == ''"">https://aka.ms/vsextensibility</PackageProjectUrl>");
            sb.AppendLine(@"    <PackageLicenseUrl Condition=""'$(PackageLicenseUrl)' == ''"">https://aka.ms/pexunj</PackageLicenseUrl>");
            sb.AppendLine(@"    <PackageIconUrl Condition=""'$(PackageIconUrl)' == ''"">https://aka.ms/vsextensibilityicon</PackageIconUrl>");
            sb.AppendLine(@"    <PackageRequireLicenseAcceptance Condition=""'$(PackageRequireLicenseAcceptance)' == ''"">true</PackageRequireLicenseAcceptance>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--                           -->");
            sb.AppendLine(@"  <!--   Developer Environment   -->");
            sb.AppendLine(@"  <!--                           -->");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(DevEnvDir)' == '*Undefined*' OR '$(DevEnvDir)' == ''"">");
            sb.AppendLine(@"      <PropertyGroup>");
            sb.AppendLine(@"        <VSInstall>$([MSBuild]::GetRegistryValue(`HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\SxS\VS7`, `$(VisualStudioVersion)`))\</VSInstall>");
            sb.AppendLine(@"        <DevEnvDir>$(VSInstall)Common7\IDE\</DevEnvDir>");
            sb.AppendLine(@"        <MSBuildDir>$(VSInstall)MSBuild\$(VisualStudioVersion)\Bin\</MSBuildDir>");
            sb.AppendLine(@"        <VsSDKInstall>$(VSInstall)VSSDK\</VsSDKInstall>");
            sb.AppendLine(@"        <Assemblies40>$(VsSDKInstall)VSSDK\VisualStudioIntegration\Common\Assemblies\v4.0\</Assemblies40>");
            sb.AppendLine(@"        <PropertyPageBase>$(VsSDKInstall)VisualStudioIntegration\Common\Source\CSharp\PropertyPageBase\</PropertyPageBase>");
            sb.AppendLine(@"      </PropertyGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--                           -->");
            sb.AppendLine(@"  <!--   PowerShell              -->");
            sb.AppendLine(@"  <!--                           -->");
            sb.AppendLine(@"  <PropertyGroup Condition=""'$(IsPowerShellProject)' == 'true'"">");
            sb.AppendLine(@"    <PowerShellRootModule>$(AssemblyName).dll</PowerShellRootModule>");
            sb.AppendLine(@"    <PowerShellModuleVersion>$(AssemblyBuildVersion)</PowerShellModuleVersion>");
            sb.AppendLine(@"    <PowerShellGUID>$([System.Guid]::NewGuid().ToString('D'))</PowerShellGUID>");
            sb.AppendLine(@"    <PowerShellAuthor Condition=""'$(Authors)' != ''"">$(Authors)</PowerShellAuthor>");
            sb.AppendLine(@"    <PowerShellCompanyName Condition=""'$(Company)' != ''"">$(Company)</PowerShellCompanyName>");
            sb.AppendLine(@"    <PowerShellCopyright Condition=""'$(Copyright)' != ''"">$(Copyright)</PowerShellCopyright>");
            sb.AppendLine(@"    <PowerShellCmdletsToExport Condition=""'$(PowerShellCmdletsToExport)' == ''"">%2A</PowerShellCmdletsToExport>");
            sb.AppendLine(@"    <PowerShellAliasesToExport Condition=""'$(PowerShellAliasesToExport)' == ''"">%2A</PowerShellAliasesToExport>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <PreReleaseVersionLabel>beta1</PreReleaseVersionLabel>");
            sb.AppendLine(@"    ");
            sb.AppendLine(@"    <!-- VS SDK -->");
            sb.AppendLine(@"    <MicrosoftVisualStudioComponentModelHostVersion>15.0.26606</MicrosoftVisualStudioComponentModelHostVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioCoreUtilityVersion>15.0.26606</MicrosoftVisualStudioCoreUtilityVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioDataCoreVersion>9.0.21022</MicrosoftVisualStudioDataCoreVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioDataDesignCommonVersion>15.0.26606-alpha</MicrosoftVisualStudioDataDesignCommonVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioDataServicesVersion>9.0.21022</MicrosoftVisualStudioDataServicesVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioDataToolsInteropVersion>15.0.26606-alpha</MicrosoftVisualStudioDataToolsInteropVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioDesignerInterfacesVersion>1.1.4322</MicrosoftVisualStudioDesignerInterfacesVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioDiagnosticsPerformanceProviderVersion>15.0.26606-alpha</MicrosoftVisualStudioDiagnosticsPerformanceProviderVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioEditorVersion>15.0.26606</MicrosoftVisualStudioEditorVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioGraphModelVersion>15.0.26606-alpha</MicrosoftVisualStudioGraphModelVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioImageCatalogVersion>15.0.26606</MicrosoftVisualStudioImageCatalogVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioImagingInterop140DesignTimeVersion>14.3.25407</MicrosoftVisualStudioImagingInterop140DesignTimeVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioManagedInterfacesVersion>8.0.50727</MicrosoftVisualStudioManagedInterfacesVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTelemetryVersion>15.3.799-masterDDDBA9E4</MicrosoftVisualStudioTelemetryVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTextDataVersion>15.0.26606</MicrosoftVisualStudioTextDataVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTextUIVersion>15.0.26606</MicrosoftVisualStudioTextUIVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTextUIWpfVersion>15.0.26606</MicrosoftVisualStudioTextUIWpfVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTextLogicVersion>15.0.26606</MicrosoftVisualStudioTextLogicVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTextManagerInterop9Version>9.0.30729</MicrosoftVisualStudioTextManagerInterop9Version>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTextManagerInterop10Version>10.0.30319</MicrosoftVisualStudioTextManagerInterop10Version>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTextManagerInterop12Version>12.0.30110</MicrosoftVisualStudioTextManagerInterop12Version>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTextManagerInterop121DesignTimeVersion>12.1.30328</MicrosoftVisualStudioTextManagerInterop121DesignTimeVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShell15Version>15.0.26606</MicrosoftVisualStudioShell15Version>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShellDesignVersion>15.0.26606</MicrosoftVisualStudioShellDesignVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShellFrameworkVersion>15.0.26606</MicrosoftVisualStudioShellFrameworkVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShellInterop9Version>9.0.30729</MicrosoftVisualStudioShellInterop9Version>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShellInterop10Version>10.0.30319</MicrosoftVisualStudioShellInterop10Version>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShellInterop11Version>11.0.61030</MicrosoftVisualStudioShellInterop11Version>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShellInterop121DesignTimeVersion>12.1.30328</MicrosoftVisualStudioShellInterop121DesignTimeVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShellInterop140DesignTimeVersion>14.3.25407</MicrosoftVisualStudioShellInterop140DesignTimeVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShellInterop150DesignTimeVersion>15.0.26201</MicrosoftVisualStudioShellInterop150DesignTimeVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioShellInterop153DesignTimeVersion>15.0.26606</MicrosoftVisualStudioShellInterop153DesignTimeVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioTemplateWizardInterfaceVersion>8.0.0-alpha</MicrosoftVisualStudioTemplateWizardInterfaceVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioThreadingVersion>15.5.13-beta</MicrosoftVisualStudioThreadingVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioThreadingAnalyzersVersion>15.5.13-beta</MicrosoftVisualStudioThreadingAnalyzersVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioProjectSystemAnalyzersVersion>15.3.224</MicrosoftVisualStudioProjectSystemAnalyzersVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioUtilitiesVersion>15.0.26607</MicrosoftVisualStudioUtilitiesVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioValidationVersion>15.3.32</MicrosoftVisualStudioValidationVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioVsHelpVersion>15.0.26606-alpha</MicrosoftVisualStudioVsHelpVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioWCFReferenceInteropVersion>9.0.30729</MicrosoftVisualStudioWCFReferenceInteropVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioXmlEditorVersion>15.0.26606-alpha</MicrosoftVisualStudioXmlEditorVersion>");
            sb.AppendLine(@"    <MicrosoftVsDesignerVersion>15.0.26606-alpha</MicrosoftVsDesignerVersion>");
            sb.AppendLine(@"    <VsWebSiteInteropVersion>8.0.0-alpha</VsWebSiteInteropVersion>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <!-- CPS -->");
            sb.AppendLine(@"    <MicrosoftVisualStudioProjectSystemSDKVersion>15.6.128-pre</MicrosoftVisualStudioProjectSystemSDKVersion>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <!-- Roslyn -->");
            sb.AppendLine(@"    <MicrosoftVisualStudioLanguageServicesVersion>2.6.0-beta1-62113-02</MicrosoftVisualStudioLanguageServicesVersion>");
            sb.AppendLine(@"    <MicrosoftVisualStudioIntegrationTestUtilitiesVersion>2.6.0-beta1-62113-02</MicrosoftVisualStudioIntegrationTestUtilitiesVersion>");
            sb.AppendLine(@"    <RoslynIntegrationVsixVersion>2.6.0.6211302</RoslynIntegrationVsixVersion>");
            sb.AppendLine(@"    <MicrosoftNetRoslynDiagnosticsVersion>2.6.0-beta1-62322-01</MicrosoftNetRoslynDiagnosticsVersion>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <!-- NuGet -->");
            sb.AppendLine(@"    <NuGetSolutionRestoreManagerInteropVersion>4.3.0</NuGetSolutionRestoreManagerInteropVersion>");
            sb.AppendLine(@"    <NuGetVisualStudioVersion>4.3.0</NuGetVisualStudioVersion>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <!-- Msbuild -->");
            sb.AppendLine(@"    <MicrosoftBuildVersion>15.6.0-preview-000010-1174357</MicrosoftBuildVersion>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <!-- Libs -->");
            sb.AppendLine(@"    <NewtonsoftJsonVersion>9.0.1</NewtonsoftJsonVersion>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"</Project>");
            sb.AppendLine(@"");

            return sb.ToString();
        }

        private static string GenerateDirectoryBuildTargetsContent()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"<?xml version=""1.0"" encoding=""utf-8""?>");
            sb.AppendLine(@"<!--");
            sb.AppendLine(@"***********************************************************************************************");
            sb.AppendLine(@"Directory.Build.targets");
            sb.AppendLine(@"");
            sb.AppendLine(@"WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have");
            sb.AppendLine(@"          created a backup copy.  Incorrect changes to this file will make it");
            sb.AppendLine(@"          impossible to load or build your projects from the command-line or the IDE.");
            sb.AppendLine(@"");
            sb.AppendLine(@"Copyright (c) Ollon, LLC. All rights reserved. ");
            sb.AppendLine(@"***********************************************************************************************");
            sb.AppendLine(@"-->");
            sb.AppendLine(@"<Project>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--                           -->");
            sb.AppendLine(@"  <!--   Assembly Search Paths   -->");
            sb.AppendLine(@"  <!--                           -->");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <AssemblyFoldersSuffix>AssemblyFoldersEx</AssemblyFoldersSuffix>");
            sb.AppendLine(@"    <FrameworkRegistryBase>Software\Microsoft\.NETFramework</FrameworkRegistryBase>");
            sb.AppendLine(@"    <ProjectSystemExtensionDir>$(DevEnvDir)CommonExtensions\Microsoft\Project\</ProjectSystemExtensionDir>");
            sb.AppendLine(@"    <NuGetExtensionDir>$(DevEnvDir)CommonExtensions\Microsoft\NuGet\</NuGetExtensionDir>");
            sb.AppendLine(@"    <LanguageServicesDir>$(DevEnvDir)CommonExtensions\Microsoft\ManagedLanguages\VBCSharp\LanguageServices\</LanguageServicesDir>");
            sb.AppendLine(@"    <CommonAssembliesDir>$([System.IO.Path]::GetFullPath('$(DevEnvDir)..\..\VSSDK\VisualStudioIntegration\Common\Assemblies\v4.0\'))</CommonAssembliesDir>");
            sb.AppendLine(@"    <PrivateAssemblies>$(DevEnvDir)PrivateAssemblies\</PrivateAssemblies>");
            sb.AppendLine(@"    <PublicAssemblies>$(DevEnvDir)PublicAssemblies\</PublicAssemblies>");
            sb.AppendLine(@"    <AssemblySearchPaths>");
            sb.AppendLine(@"      $(SolutionDir)Lib\;");
            sb.AppendLine(@"      $(MSBuildExtensionsPath)\$(VisualStudioVersion)\Bin\;");
            sb.AppendLine(@"      $(MSBuildExtensionsPath)\$(VisualStudioVersion)\Bin\Roslyn\;");
            sb.AppendLine(@"      $(ProjectSystemExtensionDir);");
            sb.AppendLine(@"      $(NuGetExtensionDir);");
            sb.AppendLine(@"      $(LanguageServicesDir);");
            sb.AppendLine(@"      $(ReferencePath);");
            sb.AppendLine(@"      {CandidateAssemblyFiles};");
            sb.AppendLine(@"      {HintPathFromItem};");
            sb.AppendLine(@"      {TargetFrameworkDirectory};");
            sb.AppendLine(@"      {RawFileName};");
            sb.AppendLine(@"      {GAC};");
            sb.AppendLine(@"      {Registry:$(FrameworkRegistryBase),$(TargetFrameworkVersion),$(AssemblyFoldersSuffix)$(AssemblyFoldersExConditions)};");
            sb.AppendLine(@"      $(DevEnvDir);");
            sb.AppendLine(@"      $(PrivateAssemblies);");
            sb.AppendLine(@"      $(PublicAssemblies);");
            sb.AppendLine(@"      $(CommonAssembliesDir);");
            sb.AppendLine(@"    </AssemblySearchPaths>");
            sb.AppendLine(@"    <DesignTimeAssemblySearchPaths>$(AssemblySearchPaths)</DesignTimeAssemblySearchPaths>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--                           -->");
            sb.AppendLine(@"  <!--   Generate AssemblyInfo   -->");
            sb.AppendLine(@"  <!--                           -->");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <GeneratedAssemblyInfoFile>$(IntermediateOutputPath)GeneratedAssemblyInfo_$(BuildVersion)$(GeneratedFileExtension)</GeneratedAssemblyInfoFile>");
            sb.AppendLine(@"    <InternalsVisibleToSuffix>, PublicKey=$(PublicKey)</InternalsVisibleToSuffix>");
            sb.AppendLine(@"    <GeneratedInternalsVisibleToFile>$(IntermediateOutputPath)GeneratedInternalsVisibleTo$(GeneratedFileExtension)</GeneratedInternalsVisibleToFile>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <ItemGroup>");
            sb.AppendLine(@"    <AssemblyVersionAttribute Include=""System.Reflection.AssemblyTitleAttribute"">");
            sb.AppendLine(@"      <_Parameter1>$(AssemblyName)</_Parameter1>");
            sb.AppendLine(@"    </AssemblyVersionAttribute>");
            sb.AppendLine(@"    <AssemblyVersionAttribute Include=""System.Reflection.AssemblyCompanyAttribute"">");
            sb.AppendLine(@"      <_Parameter1>$(Company)</_Parameter1>");
            sb.AppendLine(@"    </AssemblyVersionAttribute>");
            sb.AppendLine(@"    <AssemblyVersionAttribute Include=""System.Reflection.AssemblyCopyrightAttribute"">");
            sb.AppendLine(@"      <_Parameter1>$(Copyright)</_Parameter1>");
            sb.AppendLine(@"    </AssemblyVersionAttribute>");
            sb.AppendLine(@"    <AssemblyVersionAttribute Include=""System.Reflection.AssemblyProductAttribute"">");
            sb.AppendLine(@"      <_Parameter1>$(AssemblyName)</_Parameter1>");
            sb.AppendLine(@"    </AssemblyVersionAttribute>");
            sb.AppendLine(@"    <AssemblyVersionAttribute Include=""System.Reflection.AssemblyDescriptionAttribute"">");
            sb.AppendLine(@"      <_Parameter1>$(AssemblyName)</_Parameter1>");
            sb.AppendLine(@"    </AssemblyVersionAttribute>");
            sb.AppendLine(@"    <AssemblyVersionAttribute Include=""System.Reflection.AssemblyVersionAttribute"">");
            sb.AppendLine(@"      <_Parameter1>$(AssemblyVersion)</_Parameter1>");
            sb.AppendLine(@"    </AssemblyVersionAttribute>");
            sb.AppendLine(@"    <AssemblyVersionAttribute Include=""System.Reflection.AssemblyFileVersionAttribute"">");
            sb.AppendLine(@"      <_Parameter1>$(BuildVersion)</_Parameter1>");
            sb.AppendLine(@"    </AssemblyVersionAttribute>");
            sb.AppendLine(@"    <AssemblyVersionAttribute Include=""System.Reflection.AssemblyInformationalVersionAttribute"">");
            sb.AppendLine(@"      <_Parameter1>$(BuildVersion)</_Parameter1>");
            sb.AppendLine(@"    </AssemblyVersionAttribute>");
            sb.AppendLine(@"  </ItemGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--                                 -->");
            sb.AppendLine(@"  <!--   Generate InternalsVisibleTo   -->");
            sb.AppendLine(@"  <!--                                 -->");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Target Name=""GenerateAssemblyInfoFile"" Inputs=""$(MSBuildThisFileFullPath)"" Outputs=""$(GeneratedAssemblyInfoFile)"" DependsOnTargets=""PrepareForBuild"">");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <WriteCodeFragment AssemblyAttributes=""@(AssemblyVersionAttribute)"" Language=""$(Language)"" OutputFile=""$(GeneratedAssemblyInfoFile)"">");
            sb.AppendLine(@"      <Output TaskParameter=""OutputFile"" ItemName=""Compile"" />");
            sb.AppendLine(@"      <Output TaskParameter=""OutputFile"" ItemName=""FileWrites"" />");
            sb.AppendLine(@"    </WriteCodeFragment>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  </Target>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <CoreCompileDependsOn>");
            sb.AppendLine(@"      GenerateAssemblyInfoFile;");
            sb.AppendLine(@"      $(CoreCompileDependsOn)");
            sb.AppendLine(@"    </CoreCompileDependsOn>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <ItemDefinitionGroup>");
            sb.AppendLine(@"    <InternalsVisibleTo>");
            sb.AppendLine(@"      <Visible>false</Visible>");
            sb.AppendLine(@"    </InternalsVisibleTo>");
            sb.AppendLine(@"  </ItemDefinitionGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Target Name=""GenerateInternalsVisibleToFile"" Inputs=""$(MSBuildThisFileFullPath);$(MSBuildProjectFile)"" Outputs=""$(GeneratedInternalsVisibleToFile)"" DependsOnTargets=""PrepareForBuild"" Condition=""'@(InternalsVisibleTo)' != ''"">");
            sb.AppendLine(@"    <ItemGroup>");
            sb.AppendLine(@"      <InternalsVisibleTo Include=""$(InternalsVisibleTo)"" />");
            sb.AppendLine(@"    </ItemGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <CreateItem Include=""System.Runtime.CompilerServices.InternalsVisibleToAttribute"" AdditionalMetadata=""_Parameter1=%(InternalsVisibleTo.Identity)$(InternalsVisibleToSuffix)"" Condition=""'@(InternalsVisibleTo)' != ''"">");
            sb.AppendLine(@"      <Output TaskParameter=""Include"" ItemName=""InternalsVisibleToAttribute"" />");
            sb.AppendLine(@"    </CreateItem>");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <WriteCodeFragment AssemblyAttributes=""@(InternalsVisibleToAttribute)"" Language=""$(Language)"" OutputFile=""$(GeneratedInternalsVisibleToFile)"">");
            sb.AppendLine(@"      <Output TaskParameter=""OutputFile"" ItemName=""Compile"" />");
            sb.AppendLine(@"      <Output TaskParameter=""OutputFile"" ItemName=""FileWrites"" />");
            sb.AppendLine(@"    </WriteCodeFragment>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  </Target>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <CoreCompileDependsOn>");
            sb.AppendLine(@"      GenerateInternalsVisibleToFile;");
            sb.AppendLine(@"      $(CoreCompileDependsOn)");
            sb.AppendLine(@"    </CoreCompileDependsOn>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--           -->");
            sb.AppendLine(@"  <!--   VSSDK   -->");
            sb.AppendLine(@"  <!--           -->");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <ItemDefinitionGroup Condition=""'(CreateVsixContainer)' == 'true'"">");
            sb.AppendLine(@"");
            sb.AppendLine(@"    <_VSIXAsset>");
            sb.AppendLine(@"      <Visible>false</Visible>");
            sb.AppendLine(@"    </_VSIXAsset>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  </ItemDefinitionGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Target Name=""LinkVSSDKEmbeddableAssemblies"" AfterTargets=""ResolveReferences"" BeforeTargets=""FindReferenceAssembliesForReferences"">");
            sb.AppendLine(@"    <ItemGroup>");
            sb.AppendLine(@"      <ReferencePath Condition=""");
            sb.AppendLine(@"              '%(FileName)' == 'Microsoft.VisualStudio.Imaging.Interop.14.0.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Imaging.Interop.15.0.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Setup.Configuration.Interop'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Shell.Embeddable'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Shell.Interop.10.0'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Shell.Interop.11.0'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Shell.Interop.12.0'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Shell.Interop.12.1.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Shell.Interop.14.0.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Shell.Interop.15.0.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Shell.Interop.15.3.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.TextManager.Interop.11.0'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.TextManager.Interop.12.0'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.TextManager.Interop.12.1.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.TextManager.Interop.14.2.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.TextManager.Interop.15.1.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.Feedback.Interop.12.0.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.ProjectSystem.Interop'");
            sb.AppendLine(@"           or '%(FileName)' == 'NuGet.VisualStudio'");
            sb.AppendLine(@"           or '%(FileName)' == 'stdole'");
            sb.AppendLine(@"           or '%(FileName)' == 'microsoft.visualstudio.designer.interfaces'");
            sb.AppendLine(@"           or '%(FileName)' == 'EnvDTE80'");
            sb.AppendLine(@"           or '%(FileName)' == 'EnvDTE90'");
            sb.AppendLine(@"           or '%(FileName)' == 'EnvDTE100'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.VisualStudio.CommandBars'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.Internal.VisualStudio.Shell.Interop.10.0.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.Internal.VisualStudio.Shell.Interop.11.0.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.Internal.VisualStudio.Shell.Interop.14.0.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.Internal.VisualStudio.Shell.Interop.14.1.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.Internal.VisualStudio.Shell.Interop.14.2.DesignTime'");
            sb.AppendLine(@"           or '%(FileName)' == 'Microsoft.Internal.VisualStudio.Shell.Embeddable'");
            sb.AppendLine(@"              "">");
            sb.AppendLine(@"        <EmbedInteropTypes>true</EmbedInteropTypes>");
            sb.AppendLine(@"      </ReferencePath>");
            sb.AppendLine(@"    </ItemGroup>");
            sb.AppendLine(@"  </Target>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Import Project=""$(VsToolsPath)\VSSDK\Microsoft.VsSDK.targets"" Condition=""'$(ImportVSSDKTargets)' == 'true'"" />");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup Condition=""'$(CreateVsixContainer)' == 'true'"">");
            sb.AppendLine(@"    <GetVsixSourceItemsDependsOn>IncludeNuGetResolvedAssets;$(GetVsixSourceItemsDependsOn)</GetVsixSourceItemsDependsOn>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Target Name=""IncludeNuGetResolvedAssets"" AfterTargets=""ResolveReferences"" Condition=""'$(CreateVsixContainer)' == 'true'"">");
            sb.AppendLine(@"    <ItemGroup>");
            sb.AppendLine(@"      <_ReferenceCopyLocalPathsWithPotentialInclusions Include=""@(ReferenceCopyLocalPaths)"" />");
            sb.AppendLine(@"      <VSIXCopyLocalReferenceSourceItem Include=""@(_ReferenceCopyLocalPathsWithPotentialInclusions)"" Condition=""'%(_ReferenceCopyLocalPathsWithPotentialInclusions.Extension)' != '.pdb'"">");
            sb.AppendLine(@"        <ForceIncludeInVsix>true</ForceIncludeInVsix>");
            sb.AppendLine(@"        <Private>true</Private>");
            sb.AppendLine(@"      </VSIXCopyLocalReferenceSourceItem>");
            sb.AppendLine(@"    </ItemGroup>");
            sb.AppendLine(@"  </Target>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Target Name=""VSIXIdentifierProjectOutputGroup"" Condition=""'$(CreateVsixContainer)' == 'false'"" />");
            sb.AppendLine(@"  <Target Name=""VSIXNameProjectOutputGroup"" Condition=""'$(CreateVsixContainer)' == 'false'"" />");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <PropertyGroup Condition=""'$(DeployExtension)' == 'true'"">");
            sb.AppendLine(@"    <StartAction>Program</StartAction>");
            sb.AppendLine(@"    <StartProgram Condition=""'$(DevEnvDir)' != ''"">$(DevEnvDir)devenv.exe</StartProgram>");
            sb.AppendLine(@"    <StartArguments>/rootsuffix Exp</StartArguments>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Target Name=""CreateDebuggableModule"" AfterTargets=""AfterBuild"" Condition=""'@(PSModuleManifest)' != ''"">");
            sb.AppendLine(@"    <PropertyGroup>");
            sb.AppendLine(@"      <ModuleFolder>$(OutputPath)\$(AssemblyName)\</ModuleFolder>");
            sb.AppendLine(@"      <DestinationModuleManifest>$(ModuleFolder)$(AssemblyName).psd1</DestinationModuleManifest>");
            sb.AppendLine(@"    </PropertyGroup>");
            sb.AppendLine(@"    <ItemGroup>");
            sb.AppendLine(@"      <CopyFiles Include=""$(OutputPath)\*.dll"" />");
            sb.AppendLine(@"      <CopyFiles Include=""@(Content)"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""@{"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""    RootModule      = '%(PSModuleManifest.RootModule)'"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""    ModuleVersion   = '%(PSModuleManifest.ModuleVersion)'"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""    GUID            = '%(PSModuleManifest.Guid)'"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""    Author          = '%(PSModuleManifest.Author)'"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""    CompanyName     = '%(PSModuleManifest.CompanyName)'"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""    Copyright       = '%(PSModuleManifest.Copyright)'"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""    CmdletsToExport = '%(PSModuleManifest.CmdletsToExport)'"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""    AliasesToExport = '%(PSModuleManifest.AliasesToExport)'"" />");
            sb.AppendLine(@"      <_ModuleManifestFileLines Include=""}"" />");
            sb.AppendLine(@"    </ItemGroup>");
            sb.AppendLine(@"    <MakeDir Directories=""$(ModuleFolder)"" />");
            sb.AppendLine(@"    <Copy SourceFiles=""@(CopyFiles)"" DestinationFolder=""$(ModuleFolder)"" OverwriteReadOnlyFiles=""true"" />");
            sb.AppendLine(@"    <WriteLinesToFile Lines=""@(_ModuleManifestFileLines)"" File=""$(DestinationModuleManifest)"" Overwrite=""true"" />");
            sb.AppendLine(@"  </Target>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!--   References   -->");
            sb.AppendLine(@"  <!--                -->");
            sb.AppendLine(@"  <PropertyGroup>");
            sb.AppendLine(@"    <IncludeCommonReferences Condition=""'$(IncludeCommonReferences)' == ''"">true</IncludeCommonReferences>");
            sb.AppendLine(@"  </PropertyGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <ItemDefinitionGroup>");
            sb.AppendLine(@"    <Reference>");
            sb.AppendLine(@"      <Private>false</Private>");
            sb.AppendLine(@"    </Reference>");
            sb.AppendLine(@"  </ItemDefinitionGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeVisualStudioReferences)' == 'true'"">");
            sb.AppendLine(@"      <PropertyGroup>");
            sb.AppendLine(@"        <IncludeMSBuildReferences>true</IncludeMSBuildReferences>");
            sb.AppendLine(@"        <IncludeCommonReferences>true</IncludeCommonReferences>");
            sb.AppendLine(@"        <IncludeWpfReferences>true</IncludeWpfReferences>");
            sb.AppendLine(@"        <IncludeRoslynReferences>true</IncludeRoslynReferences>");
            sb.AppendLine(@"        <IncludeVSPackageReferences>true</IncludeVSPackageReferences>");
            sb.AppendLine(@"      </PropertyGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeProjectSystemReferences)' == 'true'"">");
            sb.AppendLine(@"");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.CSharp"" />");
            sb.AppendLine(@"        <!--<Reference Include=""System.Composition"" />-->");
            sb.AppendLine(@"        <Reference Include=""System"" />");
            sb.AppendLine(@"        <Reference Include=""System.Core"" />");
            sb.AppendLine(@"        <Reference Include=""System.Xml"" />");
            sb.AppendLine(@"        <Reference Include=""System.Xml.Linq"" />");
            sb.AppendLine(@"        <Reference Include=""System.Collections.Immutable""/>");
            sb.AppendLine(@"        <Reference Include=""NuGet.Versioning"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.VSHelp"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.VSHelp80"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Framework"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.15.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Framework"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Threading"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Utilities"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Validation"" />");
            sb.AppendLine(@"        <Reference Include=""System.Threading.Tasks.Dataflow""/>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.ProjectSystem""  />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.ProjectSystem.VS"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.ProjectSystem.Implementation""  />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.ProjectSystem.VS.Implementation"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.OLE.Interop"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.8.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.9.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.10.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.11.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.12.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.12.1.DesignTime"">");
            sb.AppendLine(@"          <EmbedInteropTypes>true</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextManager.Interop"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.ComponentModelHost"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Composition"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Composition.Configuration"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Designer.Interfaces"">");
            sb.AppendLine(@"          <EmbedInteropTypes>true</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <PackageReference Include=""System.ValueTuple"" Version=""4.4.0"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.Composition"" Version=""1.0.31"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeCommonReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.CSharp"" />");
            sb.AppendLine(@"        <Reference Include=""System"" />");
            sb.AppendLine(@"        <Reference Include=""System.Core"" />");
            sb.AppendLine(@"        <Reference Include=""System.Design"" />");
            sb.AppendLine(@"        <Reference Include=""System.Xml"" />");
            sb.AppendLine(@"        <Reference Include=""System.Xml.Linq"" />");
            sb.AppendLine(@"        <Reference Include=""System.Xaml"" />");
            sb.AppendLine(@"        <Reference Include=""WindowsBase"" />");
            sb.AppendLine(@"        <Reference Include=""PresentationCore"" />");
            sb.AppendLine(@"        <Reference Include=""PresentationFramework"" />");
            sb.AppendLine(@"        <Reference Include=""System.Runtime"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""System.Text.Encoding.CodePages"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""System.Reflection.Metadata"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""System.Security.Cryptography.Algorithms"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""System.Collections.Immutable"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""System.ComponentModel.Composition"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeMSBuildReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Framework"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Utilities.Core"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Tasks.Core"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Engine"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Conversion.Core"">");
            sb.AppendLine(@"          <Private>true</Private>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeMSBuildTaskReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Framework"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Utilities.Core"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Tasks.Core"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Engine"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Build.Conversion.Core"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeWpfReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""System.Xaml"" />");
            sb.AppendLine(@"        <Reference Include=""WindowsBase"" />");
            sb.AppendLine(@"        <Reference Include=""PresentationCore"" />");
            sb.AppendLine(@"        <Reference Include=""PresentationFramework"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludePowerShellReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""System.Management"" />");
            sb.AppendLine(@"        <Reference Include=""System.Management.Automation"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Management.Infrastructure"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludePowerShellEditorReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""System.Xaml"" />");
            sb.AppendLine(@"        <Reference Include=""WindowsBase"" />");
            sb.AppendLine(@"        <Reference Include=""PresentationCore"" />");
            sb.AppendLine(@"        <Reference Include=""PresentationFramework"" />");
            sb.AppendLine(@"        <Reference Include=""System.Management"" />");
            sb.AppendLine(@"        <Reference Include=""System.Management.Automation"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.Management.Infrastructure"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.PowerShell.Editor"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.PowerShell.GPowerShell"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.PowerShell.GraphicalHost"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.PowerShell.ISECommon"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeDesignTimeReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.15.1.DesignTime"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.15.0.DesignTime"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.14.3.DesignTime"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.14.2.DesignTime"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.14.1.DesignTime"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.14.0.DesignTime"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.12.1.DesignTime"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextManager.Interop.12.1.DesignTime"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <!-- ");
            sb.AppendLine(@"    Defining this target will disable the new SDK behavior of implicit transitive project");
            sb.AppendLine(@"    references. This is a fine feature in general but the current implementation breaks VSIX ");
            sb.AppendLine(@"    construction by including a number of projects that should not be included. ");
            sb.AppendLine(@"    https://github.com/dotnet/sdk/issues/1366");
            sb.AppendLine(@"  -->");
            sb.AppendLine(@"  <Target Name=""IncludeTransitiveProjectReferences"" >");
            sb.AppendLine(@"  </Target>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeVSEditorReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <PackageReference Include=""VSLangProj"" Version=""7.0.3300"" />");
            sb.AppendLine(@"        <PackageReference Include=""VSLangProj2"" Version=""7.0.5000"" />");
            sb.AppendLine(@"        <PackageReference Include=""VSLangProj80"" Version=""8.0.50727"" />");
            sb.AppendLine(@"        <PackageReference Include=""VSLangProj90"" Version=""9.0.30729"" />");
            sb.AppendLine(@"        <PackageReference Include=""VSLangProj100"" Version=""10.0.30319"" />");
            sb.AppendLine(@"        <PackageReference Include=""VSLangProj110"" Version=""11.0.61030"" />");
            sb.AppendLine(@"");
            sb.AppendLine(@"        <PackageReference Include=""EnvDTE"" Version=""8.0.1"" />");
            sb.AppendLine(@"        <PackageReference Include=""EnvDTE80"" Version=""8.0.1"" />");
            sb.AppendLine(@"        <PackageReference Include=""EnvDTE90"" Version=""9.0.1"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.ComponentModelHost"" Version=""$(MicrosoftVisualStudioComponentModelHostVersion)""/>");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.CoreUtility"" Version=""$(MicrosoftVisualStudioCoreUtilityVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Data.Core"" Version=""$(MicrosoftVisualStudioDataCoreVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Data.Services"" Version=""$(MicrosoftVisualStudioDataServicesVersion)"" />");
            sb.AppendLine(@"        ");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.DataTools.Interop"" Version=""$(MicrosoftVisualStudioDataToolsInteropVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Diagnostics.PerformanceProvider"" Version=""$(MicrosoftVisualStudioDiagnosticsPerformanceProviderVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Designer.Interfaces"" Version=""$(MicrosoftVisualStudioDesignerInterfacesVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.GraphModel"" Version=""$(MicrosoftVisualStudioGraphModelVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Editor"" Version=""$(MicrosoftVisualStudioEditorVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.ImageCatalog"" Version=""$(MicrosoftVisualStudioImageCatalogVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Imaging.Interop.14.0.DesignTime"" Version=""$(MicrosoftVisualStudioImagingInterop140DesignTimeVersion)""/>");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.ManagedInterfaces"" Version=""$(MicrosoftVisualStudioManagedInterfacesVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Text.Data"" Version=""$(MicrosoftVisualStudioTextDataVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Text.Logic"" Version=""$(MicrosoftVisualStudioTextLogicVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Text.UI"" Version=""$(MicrosoftVisualStudioTextUIVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Text.UI.Wpf"" Version=""$(MicrosoftVisualStudioTextUIWpfVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.TextManager.Interop.10.0"" Version=""$(MicrosoftVisualStudioTextManagerInterop10Version)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.TextManager.Interop.12.0"" Version=""$(MicrosoftVisualStudioTextManagerInterop12Version)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.TextManager.Interop.12.1.DesignTime"" Version=""$(MicrosoftVisualStudioTextManagerInterop121DesignTimeVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Threading"" Version=""$(MicrosoftVisualStudioThreadingVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Threading.Analyzers"" Version=""$(MicrosoftVisualStudioThreadingAnalyzersVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.Interop.9.0"" Version=""$(MicrosoftVisualStudioShellInterop9Version)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.Interop.10.0"" Version=""$(MicrosoftVisualStudioShellInterop10Version)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.Interop.11.0"" Version=""$(MicrosoftVisualStudioShellInterop11Version)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.Interop.12.1.DesignTime"" Version=""$(MicrosoftVisualStudioShellInterop121DesignTimeVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.Interop.14.0.DesignTime"" Version=""$(MicrosoftVisualStudioShellInterop140DesignTimeVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.Interop.15.0.DesignTime"" Version=""$(MicrosoftVisualStudioShellInterop150DesignTimeVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.Interop.15.3.DesignTime"" Version=""$(MicrosoftVisualStudioShellInterop153DesignTimeVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.Design"" Version=""$(MicrosoftVisualStudioShellDesignVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.15.0"" Version=""$(MicrosoftVisualStudioShell15Version)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Shell.Framework"" Version=""$(MicrosoftVisualStudioShellFrameworkVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Telemetry"" Version=""$(MicrosoftVisualStudioTelemetryVersion)"" ExcludeAssets=""Build"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Utilities"" Version=""$(MicrosoftVisualStudioUtilitiesVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.Validation"" Version=""$(MicrosoftVisualStudioValidationVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.VSHelp"" Version=""$(MicrosoftVisualStudioVsHelpVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.XmlEditor"" Version=""$(MicrosoftVisualStudioXmlEditorVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VisualStudio.WCFReference.Interop"" Version=""$(MicrosoftVisualStudioWCFReferenceInteropVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.VSDesigner"" Version=""$(MicrosoftVsDesignerVersion)"" />");
            sb.AppendLine(@"        <PackageReference Include=""Newtonsoft.Json"" Version=""$(NewtonsoftJsonVersion)"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeVSPackageReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"");
            sb.AppendLine(@"        <!-- Framework -->");
            sb.AppendLine(@"        <Reference Include=""System.Data"" />");
            sb.AppendLine(@"        <Reference Include=""System.Drawing"" />");
            sb.AppendLine(@"        <Reference Include=""System.Windows.Forms"" />");
            sb.AppendLine(@"");
            sb.AppendLine(@"        <!-- Interop -->");
            sb.AppendLine(@"        <Reference Include=""EnvDTE"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""EnvDTE100"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""EnvDTE80"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""EnvDTE90"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.CommandBars"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""VSLangProj"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""VSLangProj2"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""VSLangProj80"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""VSLangProj90"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""VSLangProj100"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""VSLangProj110"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""VSLangProj140"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""stdole"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.8.0"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.9.0"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.10.0"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.11.0"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Interop.12.0"">");
            sb.AppendLine(@"          <EmbedInteropTypes>False</EmbedInteropTypes>");
            sb.AppendLine(@"        </Reference>");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"        <!-- Core -->");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.ComponentModelHost"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.CoreUtility"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Imaging"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.OLE.Interop"" />");
            sb.AppendLine(@"");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.15.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Design"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Embeddable"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Shell.Framework"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Threading"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Utilities"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.Validation"" />");
            sb.AppendLine(@"");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TemplateWizardInterface"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeTextManagerReferences)'=='true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextManager.Interop"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextManager.Interop.10.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextManager.Interop.11.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextManager.Interop.12.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextManager.Interop.8.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextManager.Interop.9.0"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeTextTemplatingReferences)'=='true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextTemplating.$(VisualStudioVersion)"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextTemplating.VSHost.$(VisualStudioVersion)"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextTemplating.Interfaces.10.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextTemplating.Interfaces.11.0"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.TextTemplating.Interfaces.$(VisualStudioVersion)"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeNuGetReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <PackageReference Include=""NuGet.Client"" Version=""4.0.0"" />");
            sb.AppendLine(@"        <PackageReference Include=""NuGet.Core"" Version=""2.14.0"" />");
            sb.AppendLine(@"        <PackageReference Include=""NuGet.PackageManagement"" Version=""4.0.0"" />");
            sb.AppendLine(@"        <PackageReference Include=""NuGet.Protocol.VisualStudio"" Version=""4.0.0"" />");
            sb.AppendLine(@"        <PackageReference Include=""NuGet.Common"" Version=""4.0.0"" />");
            sb.AppendLine(@"        <PackageReference Include=""NuGet.VisualStudio"" Version=""4.0.0"" />");
            sb.AppendLine(@"        <PackageReference Include=""NuGet.Protocol.Core.V2"" Version=""3.5.0"" />");
            sb.AppendLine(@"        <PackageReference Include=""NuGet.Protocol.Core.V3"" Version=""4.0.0"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"  <Choose>");
            sb.AppendLine(@"    <When Condition=""'$(IncludeRoslynReferences)' == 'true'"">");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <Reference Include=""Microsoft.CodeAnalysis"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.CodeAnalysis.CSharp"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.CodeAnalysis.Workspaces"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.CodeAnalysis.CSharp.Workspaces"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.CodeAnalysis.Workspaces.Desktop"" />");
            sb.AppendLine(@"        <Reference Include=""Microsoft.VisualStudio.LanguageServices"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"      <ItemGroup>");
            sb.AppendLine(@"        <PackageReference Include=""System.ValueTuple"" Version=""4.4.0"" />");
            sb.AppendLine(@"        <PackageReference Include=""Microsoft.Composition"" Version=""1.0.31"" />");
            sb.AppendLine(@"      </ItemGroup>");
            sb.AppendLine(@"    </When>");
            sb.AppendLine(@"  </Choose>");
            sb.AppendLine(@"");
            sb.AppendLine(@"</Project>");

            return sb.ToString();
        }

        private sealed class SolutionFileContext : ISolutionFileContext
        {
            public SolutionFileContext(
                string buildCmd,
                string cleanCmd,
                string editorconfigEditorconfig,
                string gitignoreGitignore,
                string licenseTxt,
                string readmeMD,
                string rebuildCmd,
                string restoreCmd,
                string shellCmd,
                string tfignoreTfignore,
                string solutionRulesRuleset,
                string item35MSSharedLib1024Snk,
                string contributorCovenantMD,
                string buildPs1,
                string cleanPs1,
                string importsTargets,
                string rebuildPs1,
                string referencesTargets,
                string restorePs1,
                string settingsProps,
                string solutionhelperPsm1,
                string vsSDKTargets,
                string directoryBuildProps,
                string directoryBuildTargets
            )
            {
                BuildCmd = buildCmd;
                CleanCmd = cleanCmd;
                EditorconfigEditorconfig = editorconfigEditorconfig;
                GitignoreGitignore = gitignoreGitignore;
                LicenseTxt = licenseTxt;
                ReadmeMD = readmeMD;
                RebuildCmd = rebuildCmd;
                RestoreCmd = restoreCmd;
                ShellCmd = shellCmd;
                TfignoreTfignore = tfignoreTfignore;
                SolutionRulesRuleset = solutionRulesRuleset;
                Item35MSSharedLib1024Snk = item35MSSharedLib1024Snk;
                ContributorCovenantMD = contributorCovenantMD;
                BuildPs1 = buildPs1;
                CleanPs1 = cleanPs1;
                ImportsTargets = importsTargets;
                RebuildPs1 = rebuildPs1;
                ReferencesTargets = referencesTargets;
                RestorePs1 = restorePs1;
                SettingsProps = settingsProps;
                SolutionhelperPsm1 = solutionhelperPsm1;
                VsSDKTargets = vsSDKTargets;
                DirectoryBuildProps = directoryBuildProps;
                DirectoryBuildTargets = directoryBuildTargets;

            }

            public string BuildCmd { get; }
            public string CleanCmd { get; }
            public string EditorconfigEditorconfig { get; }
            public string GitignoreGitignore { get; }
            public string LicenseTxt { get; }
            public string ReadmeMD { get; }
            public string RebuildCmd { get; }
            public string RestoreCmd { get; }
            public string ShellCmd { get; }
            public string TfignoreTfignore { get; }
            public string SolutionRulesRuleset { get; }
            public string Item35MSSharedLib1024Snk { get; }
            public string ContributorCovenantMD { get; }
            public string BuildPs1 { get; }
            public string CleanPs1 { get; }
            public string ImportsTargets { get; }
            public string RebuildPs1 { get; }
            public string ReferencesTargets { get; }
            public string RestorePs1 { get; }
            public string SettingsProps { get; }
            public string SolutionhelperPsm1 { get; }
            public string VsSDKTargets { get; }
            public string DirectoryBuildProps { get; }
            public string DirectoryBuildTargets { get; }

        }

    }

    public interface ISolutionFileContext
    {
        string BuildCmd { get; }
        string CleanCmd { get; }
        string EditorconfigEditorconfig { get; }
        string GitignoreGitignore { get; }
        string LicenseTxt { get; }
        string ReadmeMD { get; }
        string RebuildCmd { get; }
        string RestoreCmd { get; }
        string ShellCmd { get; }
        string TfignoreTfignore { get; }
        string SolutionRulesRuleset { get; }
        string Item35MSSharedLib1024Snk { get; }
        string ContributorCovenantMD { get; }
        string BuildPs1 { get; }
        string CleanPs1 { get; }
        string ImportsTargets { get; }
        string RebuildPs1 { get; }
        string ReferencesTargets { get; }
        string RestorePs1 { get; }
        string SettingsProps { get; }
        string SolutionhelperPsm1 { get; }
        string VsSDKTargets { get; }
        string DirectoryBuildProps { get; }
        string DirectoryBuildTargets { get; }
    }

    public struct FileLocation
    {
        public string Path { get; }
        public string Content { get; }
        public FileLocation(string path, string content)
        {
            Path = path;
            Content = content;
        }
    }

}

